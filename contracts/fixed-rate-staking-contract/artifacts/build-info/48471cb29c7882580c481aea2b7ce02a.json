{
	"id": "48471cb29c7882580c481aea2b7ce02a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/fixed-rate-staking-contract/FixedRateStaking.sol\n\n\n\npragma solidity ^0.8.24;\n\n\ncontract FixedStaking is ERC20 {\n\n    mapping(address => uint256) public staked;\n    // Mapping to keep track of the amount staked by each address.\n\n    mapping(address => uint256) private stakedFromTS;\n    // Mapping to store the timestamp when tokens were staked by each address.\n\n    constructor() ERC20(\"Fixed Staking\", \"FIX\") {\n        _mint(msg.sender, 1000000000000000000);\n    }\n\n    function stake(uint256 amount) external {\n        // Function to stake tokens.\n        require(amount > 0, \"amount is <= 0\");\n        // Requires the staked amount to be greater than zero.\n        require(balanceOf(msg.sender) >= amount, \"balance is <= amount\");\n        // Requires the sender to have enough tokens to stake.\n        _transfer(msg.sender, address(this), amount);\n        // Transfers the specified amount of tokens from the sender to the contract.\n        if (staked[msg.sender] > 0) {\n            claim();\n            // If the sender has previously staked tokens, calls the claim function to calculate and mint rewards.\n        }\n        stakedFromTS[msg.sender] = block.timestamp;\n        // Records the timestamp when the tokens were staked.\n        staked[msg.sender] += amount;\n        // Increments the total staked amount for the sender.\n    }\n\n    function unstake(uint256 amount) external {\n        // Function to unstake tokens\n        require(amount > 0, \"amount is <= 0\");\n        // Requires the unstaked amount to be greater than zero\n        require(staked[msg.sender] >= amount, \"amount is > staked\");\n        // Requires the sender to have enough tokens staked\n        claim();\n        // Calls the claim function to calculate and mint rewards\n        staked[msg.sender] -= amount;\n        // Decrements the total staked amount for the sender\n        _transfer(address(this), msg.sender, amount);\n        // Transfers the unstaked tokens back to the sender\n    }\n\n    function claim() public {\n        // Function to claim rewards.\n        require(staked[msg.sender] > 0, \"staked is <= 0\");\n        // Requires the sender to have staked tokens\n        uint256 secondsStaked = block.timestamp - stakedFromTS[msg.sender];\n        // Calculates the duration for which tokens have been staked\n        uint256 rewards = staked[msg.sender] * secondsStaked / 3.154e7;\n        // Calculates the rewards based on the staked amount and duration\n        // 3.154e7 is a number of seconds in a year\n        _mint(msg.sender, rewards);\n        // Mints the calculated rewards and assigns them to the sender\n        stakedFromTS[msg.sender] = block.timestamp;\n        // Updates the timestamp of when tokens were last staked by the sender\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FixedStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22134:24793  contract FixedStaking is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22421:22520  constructor() ERC20(\"Fixed Staking\", \"FIX\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12788:12901  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x4669786564205374616b696e6700000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4649580000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12862:12867  name_ */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12854:12859  _name */\n  0x03\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12854:12867  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12887:12894  symbol_ */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12877:12884  _symbol */\n  0x04\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12877:12894  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12788:12901  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22475:22513  _mint(msg.sender, 1000000000000000000) */\n  tag_9\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22481:22491  msg.sender */\n  caller\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22493:22512  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22475:22480  _mint */\n  shl(0x20, tag_10)\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22475:22513  _mint(msg.sender, 1000000000000000000) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22134:24793  contract FixedStaking is ERC20 {... */\n  jump(tag_11)\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\ntag_10:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18702:18703  0 */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18683:18704  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18683:18690  account */\n  dup3\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18683:18704  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18679:18770  if (account == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18756:18757  0 */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18727:18759  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18679:18770  if (account == address(0)) {... */\ntag_13:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18779:18814  _update(address(0), account, value) */\n  tag_16\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18795:18796  0 */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18799:18806  account */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18808:18813  value */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18779:18786  _update */\n  shl(0x20, tag_17)\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18779:18814  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_17:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17268:17269  0 */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17252:17270  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17252:17256  from */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17252:17270  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17248:17788  if (from == address(0)) {... */\n  tag_19\n  jumpi\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17404:17409  value */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17388:17400  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17388:17409  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17248:17788  if (from == address(0)) {... */\n  jump(tag_22)\ntag_19:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17440:17459  uint256 fromBalance */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17462:17471  _balances */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17462:17477  _balances[from] */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17472:17476  from */\n  dup6\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17462:17477  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17440:17477  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17509:17514  value */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17495:17506  fromBalance */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17495:17514  fromBalance < value */\n  lt\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17491:17606  if (fromBalance < value) {... */\n  iszero\n  tag_23\n  jumpi\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17566:17570  from */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17572:17583  fromBalance */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17585:17590  value */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17541:17591  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17491:17606  if (fromBalance < value) {... */\ntag_23:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17758:17763  value */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17744:17755  fromBalance */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17744:17763  fromBalance - value */\n  sub\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17735  _balances */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17741  _balances[from] */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17736:17740  from */\n  dup7\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17741  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17763  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17426:17788  {... */\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17248:17788  if (from == address(0)) {... */\ntag_22:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17816:17817  0 */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17802:17818  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17802:17804  to */\n  dup3\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17802:17818  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17798:18223  if (to == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17981:17986  value */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17965:17977  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17965:17986  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17798:18223  if (to == address(0)) {... */\n  jump(tag_27)\ntag_26:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18193:18198  value */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18185  _balances */\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18189  _balances[to] */\n  dup1\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18186:18188  to */\n  dup5\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18189  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18198  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17798:18223  if (to == address(0)) {... */\ntag_27:\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18253:18255  to */\n  dup2\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18238:18263  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18247:18251  from */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18238:18263  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18257:18262  value */\n  dup4\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18238:18263  Transfer(from, to, value) */\n  mload(0x40)\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_30:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_31:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_32:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_33:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_60:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_62\n  tag_32\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":714:798   */\ntag_61:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_34:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_35:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_36:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_37:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_67\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_36\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1429:1468   */\n  tag_68\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_36\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_38:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_39:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_40:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_72\n    /* \"#utility.yul\":1818:1852   */\n  tag_73\n    /* \"#utility.yul\":1827:1851   */\n  tag_74\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_38\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1818:1852   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1800:1853   */\n  tag_38\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_41:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_42:\n    /* \"#utility.yul\":2056:2095   */\n  tag_77\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_40\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2117:2208   */\n  tag_78\n    /* \"#utility.yul\":2166:2207   */\n  tag_79\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_41\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_37\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_43:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_44:\n    /* \"#utility.yul\":2377:2409   */\n  tag_82\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2418:2483   */\n  tag_83\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_42\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_45:\n    /* \"#utility.yul\":2555:2675   */\ntag_85:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_88\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_46:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_91\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2906:2935   */\n  tag_92\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_35\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_93:\n    /* \"#utility.yul\":3133:3213   */\n  tag_94\n    /* \"#utility.yul\":3189:3211   */\n  tag_95\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_35\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_45\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_90:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_47:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_48:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_98\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_47\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_49:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_100\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_48\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_102\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_30\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_104\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4038:4094   */\ntag_103:\n    /* \"#utility.yul\":4118:4156   */\n  tag_105\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4203:4270   */\n  tag_106\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_108\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_109:\n    /* \"#utility.yul\":5144:5211   */\n  tag_110\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_49\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_107)\n    /* \"#utility.yul\":4365:4983   */\ntag_108:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_111\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_34\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_112:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_116\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_48\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_115:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_107:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_50:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_51:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_119\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_50\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_52:\n    /* \"#utility.yul\":5555:5579   */\n  tag_121\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_51\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_15:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_123\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_52\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_53:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_21:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_126\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_38\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_127\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_38\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_129\n  tag_53\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6154:6190   */\ntag_128:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_54:\n    /* \"#utility.yul\":6290:6314   */\n  tag_131\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_38\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_25:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_133\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_52\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6608:6680   */\n  tag_134\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_54\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6690:6762   */\n  tag_135\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_54\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_29:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_137\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_54\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22134:24793  contract FixedStaking is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22134:24793  contract FixedStaking is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e71d92d\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x98807d84\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x98807d84\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x4e71d92d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12966:13055  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15185:15371  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14036:14133  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15931:16175  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23400:24023  function unstake(uint256 amount) external {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24029:24791  function claim() public {... */\n    tag_9:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14191:14307  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13168:13261  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22172:22213  mapping(address => uint256) public staked */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22526:23394  function stake(uint256 amount) external {... */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14502:14680  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14738:14878  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12966:13055  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13011:13024  string memory */\n      0x60\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13043:13048  _name */\n      0x03\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13036:13048  return _name */\n      dup1\n      sload\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_73\n      jump\t// in\n    tag_74:\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_76\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_75)\n    tag_76:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_77:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_77\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":12966:13055  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15185:15371  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15258:15262  bool */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15274:15287  address owner */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15290:15302  _msgSender() */\n      tag_79\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15290:15300  _msgSender */\n      tag_80\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15290:15302  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15274:15302  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15312:15343  _approve(owner, spender, value) */\n      tag_81\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15321:15326  owner */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15328:15335  spender */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15337:15342  value */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15312:15320  _approve */\n      tag_82\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15312:15343  _approve(owner, spender, value) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15360:15364  true */\n      0x01\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15353:15364  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15185:15371  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14036:14133  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14088:14095  uint256 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14114:14126  _totalSupply */\n      sload(0x02)\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14107:14126  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14036:14133  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15931:16175  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16018:16022  bool */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16034:16049  address spender */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16052:16064  _msgSender() */\n      tag_85\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16052:16062  _msgSender */\n      tag_80\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16052:16064  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16034:16064  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16074:16111  _spendAllowance(from, spender, value) */\n      tag_86\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16090:16094  from */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16096:16103  spender */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16105:16110  value */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16074:16089  _spendAllowance */\n      tag_87\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16074:16111  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16121:16147  _transfer(from, to, value) */\n      tag_88\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16131:16135  from */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16137:16139  to */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16141:16146  value */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16121:16130  _transfer */\n      tag_89\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16121:16147  _transfer(from, to, value) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16164:16168  true */\n      0x01\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16157:16168  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":15931:16175  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23400:24023  function unstake(uint256 amount) external {... */\n    tag_40:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23507:23508  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23498:23504  amount */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23498:23508  amount > 0 */\n      gt\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23490:23527  require(amount > 0, \"amount is <= 0\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23631:23637  amount */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23609:23615  staked */\n      0x05\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23609:23627  staked[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23616:23626  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23609:23627  staked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23609:23637  staked[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23601:23660  require(staked[msg.sender] >= amount, \"amount is > staked\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23730:23737  claim() */\n      tag_97\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23730:23735  claim */\n      tag_46\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23730:23737  claim() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23835:23841  amount */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23813:23819  staked */\n      0x05\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23813:23831  staked[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23820:23830  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23813:23831  staked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23813:23841  staked[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23912:23956  _transfer(address(this), msg.sender, amount) */\n      tag_100\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23930:23934  this */\n      address\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23937:23947  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23949:23955  amount */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23912:23921  _transfer */\n      tag_89\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23912:23956  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23400:24023  function unstake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13943:13948  uint8 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13967:13969  18 */\n      0x12\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13960:13969  return 18 */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24029:24791  function claim() public {... */\n    tag_46:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24130:24131  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24109:24115  staked */\n      0x05\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24109:24127  staked[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24116:24126  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24109:24127  staked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24109:24131  staked[msg.sender] > 0 */\n      gt\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24101:24150  require(staked[msg.sender] > 0, \"staked is <= 0\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24213:24234  uint256 secondsStaked */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24255:24267  stakedFromTS */\n      0x06\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24255:24279  stakedFromTS[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24268:24278  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24255:24279  stakedFromTS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24237:24252  block.timestamp */\n      timestamp\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24237:24279  block.timestamp - stakedFromTS[msg.sender] */\n      tag_106\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_106:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24213:24279  uint256 secondsStaked = block.timestamp - stakedFromTS[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24358:24373  uint256 rewards */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24413:24420  3.154e7 */\n      0x01e14320\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24397:24410  secondsStaked */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24376:24382  staked */\n      0x05\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24376:24394  staked[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24383:24393  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24376:24394  staked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24376:24410  staked[msg.sender] * secondsStaked */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24376:24420  staked[msg.sender] * secondsStaked / 3.154e7 */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24358:24420  uint256 rewards = staked[msg.sender] * secondsStaked / 3.154e7 */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24556:24582  _mint(msg.sender, rewards) */\n      tag_111\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24562:24572  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24574:24581  rewards */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24556:24561  _mint */\n      tag_112\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24556:24582  _mint(msg.sender, rewards) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24690:24705  block.timestamp */\n      timestamp\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24663:24675  stakedFromTS */\n      0x06\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24663:24687  stakedFromTS[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24676:24686  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24663:24687  stakedFromTS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24663:24705  stakedFromTS[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24053:24791  {... */\n      pop\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":24029:24791  function claim() public {... */\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14191:14307  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_50:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14256:14263  uint256 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14282:14291  _balances */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14282:14300  _balances[account] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14292:14299  account */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14282:14300  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14275:14300  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14191:14307  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13168:13261  function symbol() public view virtual returns (string memory) {... */\n    tag_53:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13215:13228  string memory */\n      0x60\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13247:13254  _symbol */\n      0x04\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13240:13254  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_73\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":13168:13261  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22172:22213  mapping(address => uint256) public staked */\n    tag_57:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22526:23394  function stake(uint256 amount) external {... */\n    tag_61:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22630:22631  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22621:22627  amount */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22621:22631  amount > 0 */\n      gt\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22613:22650  require(amount > 0, \"amount is <= 0\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_93\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22756:22762  amount */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22731:22752  balanceOf(msg.sender) */\n      tag_123\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22741:22751  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22731:22740  balanceOf */\n      tag_50\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22731:22752  balanceOf(msg.sender) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22731:22762  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22723:22787  require(balanceOf(msg.sender) >= amount, \"balance is <= amount\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22860:22904  _transfer(msg.sender, address(this), amount) */\n      tag_127\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22870:22880  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22890:22894  this */\n      address\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22897:22903  amount */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22860:22869  _transfer */\n      tag_89\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22860:22904  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23024:23025  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23003:23009  staked */\n      0x05\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23003:23021  staked[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23010:23020  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23003:23021  staked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23003:23025  staked[msg.sender] > 0 */\n      gt\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22999:23174  if (staked[msg.sender] > 0) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23041:23048  claim() */\n      tag_129\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23041:23046  claim */\n      tag_46\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23041:23048  claim() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22999:23174  if (staked[msg.sender] > 0) {... */\n    tag_128:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23210:23225  block.timestamp */\n      timestamp\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23183:23195  stakedFromTS */\n      0x06\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23183:23207  stakedFromTS[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23196:23206  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23183:23207  stakedFromTS[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23183:23225  stakedFromTS[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23319:23325  amount */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23297:23303  staked */\n      0x05\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23297:23315  staked[msg.sender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23304:23314  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23297:23315  staked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":23297:23325  staked[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":22526:23394  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14502:14680  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14571:14575  bool */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14587:14600  address owner */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14603:14615  _msgSender() */\n      tag_133\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14603:14613  _msgSender */\n      tag_80\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14603:14615  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14587:14615  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14625:14652  _transfer(owner, to, value) */\n      tag_134\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14635:14640  owner */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14642:14644  to */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14646:14651  value */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14625:14634  _transfer */\n      tag_89\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14625:14652  _transfer(owner, to, value) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14669:14673  true */\n      0x01\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14662:14673  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14502:14680  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14738:14878  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14818:14825  uint256 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14844:14855  _allowances */\n      0x01\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14844:14862  _allowances[owner] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14856:14861  owner */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14844:14862  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14844:14871  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14863:14870  spender */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14844:14871  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14837:14871  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":14738:14878  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":7275:7371  function _msgSender() internal view virtual returns (address) {... */\n    tag_80:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":7328:7335  address */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":7354:7364  msg.sender */\n      caller\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":7347:7364  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":7275:7371  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19881:20009  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_82:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19965:20002  _approve(owner, spender, value, true) */\n      tag_138\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19974:19979  owner */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19981:19988  spender */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19990:19995  value */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19997:20001  true */\n      0x01\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19965:19973  _approve */\n      tag_139\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19965:20002  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":19881:20009  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21555:22032  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_87:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21654:21678  uint256 currentAllowance */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21681:21706  allowance(owner, spender) */\n      tag_141\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21691:21696  owner */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21698:21705  spender */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21681:21690  allowance */\n      tag_69\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21681:21706  allowance(owner, spender) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21654:21706  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21740:21757  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21720:21736  currentAllowance */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21720:21757  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21716:22026  if (currentAllowance != type(uint256).max) {... */\n      tag_142\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21796:21801  value */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21777:21793  currentAllowance */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21777:21801  currentAllowance < value */\n      lt\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21773:21903  if (currentAllowance < value) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21855:21862  spender */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21864:21880  currentAllowance */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21882:21887  value */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21828:21888  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21773:21903  if (currentAllowance < value) {... */\n    tag_143:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21944:22001  _approve(owner, spender, currentAllowance - value, false) */\n      tag_146\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21953:21958  owner */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21960:21967  spender */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21988:21993  value */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21969:21985  currentAllowance */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21969:21993  currentAllowance - value */\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21995:22000  false */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21944:21952  _approve */\n      tag_139\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21944:22001  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21716:22026  if (currentAllowance != type(uint256).max) {... */\n    tag_142:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21644:22032  {... */\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21555:22032  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16548:16848  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_89:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16647:16648  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16631:16649  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16631:16635  from */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16631:16649  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16627:16713  if (from == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16699:16700  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16672:16702  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16627:16713  if (from == address(0)) {... */\n    tag_148:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16740:16741  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16726:16742  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16726:16728  to */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16726:16742  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16722:16808  if (to == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16794:16795  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16765:16797  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16722:16808  if (to == address(0)) {... */\n    tag_151:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16817:16841  _update(from, to, value) */\n      tag_153\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16825:16829  from */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16831:16833  to */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16835:16840  value */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16817:16824  _update */\n      tag_154\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16817:16841  _update(from, to, value) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":16548:16848  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\n    tag_112:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18702:18703  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18683:18704  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18683:18690  account */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18683:18704  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18679:18770  if (account == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18756:18757  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18727:18759  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18679:18770  if (account == address(0)) {... */\n    tag_156:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18779:18814  _update(address(0), account, value) */\n      tag_158\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18795:18796  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18799:18806  account */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18808:18813  value */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18779:18786  _update */\n      tag_154\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18779:18814  _update(address(0), account, value) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20841:21273  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_139:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20970:20971  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20953:20972  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20953:20958  owner */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20953:20972  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20949:21038  if (owner == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21024:21025  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20995:21027  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20949:21038  if (owner == address(0)) {... */\n    tag_160:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21070:21071  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21051:21072  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21051:21058  spender */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21051:21072  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21047:21137  if (spender == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21123:21124  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21095:21126  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21047:21137  if (spender == address(0)) {... */\n    tag_162:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21176:21181  value */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21146:21157  _allowances */\n      0x01\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21146:21164  _allowances[owner] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21158:21163  owner */\n      dup7\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21146:21164  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21146:21173  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21165:21172  spender */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21146:21173  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21146:21181  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21195:21204  emitEvent */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21191:21267  if (emitEvent) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21241:21248  spender */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21225:21256  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21234:21239  owner */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21225:21256  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21250:21255  value */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21225:21256  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":21191:21267  if (emitEvent) {... */\n    tag_164:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":20841:21273  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_154:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17268:17269  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17252:17270  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17252:17256  from */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17252:17270  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17248:17788  if (from == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17404:17409  value */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17388:17400  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17388:17409  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_168\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_168:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17248:17788  if (from == address(0)) {... */\n      jump(tag_169)\n    tag_167:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17440:17459  uint256 fromBalance */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17462:17471  _balances */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17462:17477  _balances[from] */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17472:17476  from */\n      dup6\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17462:17477  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17440:17477  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17509:17514  value */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17495:17506  fromBalance */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17495:17514  fromBalance < value */\n      lt\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17491:17606  if (fromBalance < value) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17566:17570  from */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17572:17583  fromBalance */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17585:17590  value */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17541:17591  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17491:17606  if (fromBalance < value) {... */\n    tag_170:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17758:17763  value */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17744:17755  fromBalance */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17744:17763  fromBalance - value */\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17735  _balances */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17741  _balances[from] */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17736:17740  from */\n      dup7\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17741  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17726:17763  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17426:17788  {... */\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17248:17788  if (from == address(0)) {... */\n    tag_169:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17816:17817  0 */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17802:17818  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17802:17804  to */\n      dup3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17802:17818  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17798:18223  if (to == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17981:17986  value */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17965:17977  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17965:17986  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17798:18223  if (to == address(0)) {... */\n      jump(tag_173)\n    tag_172:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18193:18198  value */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18185  _balances */\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18189  _balances[to] */\n      dup1\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18186:18188  to */\n      dup5\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18189  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18176:18198  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17798:18223  if (to == address(0)) {... */\n    tag_173:\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18253:18255  to */\n      dup2\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18238:18263  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18247:18251  from */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18238:18263  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18257:18262  value */\n      dup4\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":18238:18263  Transfer(from, to, value) */\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_175:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_176:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_177:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_211:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_211)\n    tag_213:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_178:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_179:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_216\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_175\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":818:889   */\n      tag_217\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_176\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_218\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_177\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":988:1017   */\n      tag_219\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_178\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_21:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_221\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_179\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_181:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_183:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_184:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_227\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_183\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_185:\n        /* \"#utility.yul\":1983:2007   */\n      tag_229\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_184\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_230:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_186:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_232\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_185\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_187:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_188:\n        /* \"#utility.yul\":2339:2363   */\n      tag_235\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_187\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_236:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_189:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_238\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_188\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_24:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_241\n      tag_181\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2632:2751   */\n    tag_240:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_242\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_186\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_243\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_189\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_190:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_191:\n        /* \"#utility.yul\":3196:3217   */\n      tag_246\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_190\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_27:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_248\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_191\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_192:\n        /* \"#utility.yul\":3533:3557   */\n      tag_250\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_187\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_31:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_252\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_192\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_34:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_255\n      tag_181\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3908:4027   */\n    tag_254:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_256\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_186\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_257\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_186\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_258\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_189\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4752   */\n    tag_39:\n        /* \"#utility.yul\":4482:4488   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4519:4528   */\n      dup3\n        /* \"#utility.yul\":4510:4517   */\n      dup5\n        /* \"#utility.yul\":4506:4529   */\n      sub\n        /* \"#utility.yul\":4502:4534   */\n      slt\n        /* \"#utility.yul\":4499:4618   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":4537:4616   */\n      tag_261\n      tag_181\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4499:4618   */\n    tag_260:\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4682:4735   */\n      tag_262\n        /* \"#utility.yul\":4727:4734   */\n      dup5\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup6\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_189\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4628:4745   */\n      pop\n        /* \"#utility.yul\":4423:4752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4758:4844   */\n    tag_193:\n        /* \"#utility.yul\":4793:4800   */\n      0x00\n        /* \"#utility.yul\":4833:4837   */\n      0xff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4838   */\n      and\n        /* \"#utility.yul\":4811:4838   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4962   */\n    tag_194:\n        /* \"#utility.yul\":4933:4955   */\n      tag_265\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4933:4955   */\n      tag_193\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4956   */\n      mstore\n        /* \"#utility.yul\":4850:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5182   */\n    tag_44:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5175   */\n      tag_267\n        /* \"#utility.yul\":5172:5173   */\n      0x00\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5157:5174   */\n      add\n        /* \"#utility.yul\":5148:5154   */\n      dup5\n        /* \"#utility.yul\":5108:5175   */\n      tag_194\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4968:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_49:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_270\n      tag_181\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5264:5383   */\n    tag_269:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_271\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_186\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_68:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_274\n      tag_181\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5616:5735   */\n    tag_273:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_275\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_186\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_276\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_186\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6183   */\n    tag_195:\n        /* \"#utility.yul\":6051:6128   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6048:6049   */\n      0x00\n        /* \"#utility.yul\":6041:6129   */\n      mstore\n        /* \"#utility.yul\":6148:6152   */\n      0x22\n        /* \"#utility.yul\":6145:6146   */\n      0x04\n        /* \"#utility.yul\":6138:6153   */\n      mstore\n        /* \"#utility.yul\":6172:6176   */\n      0x24\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6177   */\n      revert\n        /* \"#utility.yul\":6189:6509   */\n    tag_73:\n        /* \"#utility.yul\":6233:6239   */\n      0x00\n        /* \"#utility.yul\":6270:6271   */\n      0x02\n        /* \"#utility.yul\":6264:6268   */\n      dup3\n        /* \"#utility.yul\":6260:6272   */\n      div\n        /* \"#utility.yul\":6250:6272   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6318   */\n      0x01\n        /* \"#utility.yul\":6311:6315   */\n      dup3\n        /* \"#utility.yul\":6307:6319   */\n      and\n        /* \"#utility.yul\":6338:6356   */\n      dup1\n        /* \"#utility.yul\":6328:6409   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6394:6398   */\n      0x7f\n        /* \"#utility.yul\":6386:6392   */\n      dup3\n        /* \"#utility.yul\":6382:6399   */\n      and\n        /* \"#utility.yul\":6372:6399   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6409   */\n    tag_279:\n        /* \"#utility.yul\":6456:6458   */\n      0x20\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6445:6459   */\n      lt\n        /* \"#utility.yul\":6425:6443   */\n      dup2\n        /* \"#utility.yul\":6422:6460   */\n      sub\n        /* \"#utility.yul\":6419:6503   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":6475:6493   */\n      tag_281\n      tag_195\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6419:6503   */\n    tag_280:\n        /* \"#utility.yul\":6240:6509   */\n      pop\n        /* \"#utility.yul\":6189:6509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6679   */\n    tag_196:\n        /* \"#utility.yul\":6655:6671   */\n      0x616d6f756e74206973203c3d2030000000000000000000000000000000000000\n        /* \"#utility.yul\":6651:6652   */\n      0x00\n        /* \"#utility.yul\":6643:6649   */\n      dup3\n        /* \"#utility.yul\":6639:6653   */\n      add\n        /* \"#utility.yul\":6632:6672   */\n      mstore\n        /* \"#utility.yul\":6515:6679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6685:7051   */\n    tag_197:\n        /* \"#utility.yul\":6827:6830   */\n      0x00\n        /* \"#utility.yul\":6848:6915   */\n      tag_284\n        /* \"#utility.yul\":6912:6914   */\n      0x0e\n        /* \"#utility.yul\":6907:6910   */\n      dup4\n        /* \"#utility.yul\":6848:6915   */\n      tag_176\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6841:6915   */\n      swap2\n      pop\n        /* \"#utility.yul\":6924:7017   */\n      tag_285\n        /* \"#utility.yul\":7013:7016   */\n      dup3\n        /* \"#utility.yul\":6924:7017   */\n      tag_196\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7042:7044   */\n      0x20\n        /* \"#utility.yul\":7037:7040   */\n      dup3\n        /* \"#utility.yul\":7033:7045   */\n      add\n        /* \"#utility.yul\":7026:7045   */\n      swap1\n      pop\n        /* \"#utility.yul\":6685:7051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7057:7476   */\n    tag_93:\n        /* \"#utility.yul\":7223:7227   */\n      0x00\n        /* \"#utility.yul\":7261:7263   */\n      0x20\n        /* \"#utility.yul\":7250:7259   */\n      dup3\n        /* \"#utility.yul\":7246:7264   */\n      add\n        /* \"#utility.yul\":7238:7264   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7319   */\n      dup2\n        /* \"#utility.yul\":7304:7308   */\n      dup2\n        /* \"#utility.yul\":7300:7320   */\n      sub\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7285:7294   */\n      dup4\n        /* \"#utility.yul\":7281:7298   */\n      add\n        /* \"#utility.yul\":7274:7321   */\n      mstore\n        /* \"#utility.yul\":7338:7469   */\n      tag_287\n        /* \"#utility.yul\":7464:7468   */\n      dup2\n        /* \"#utility.yul\":7338:7469   */\n      tag_197\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7330:7469   */\n      swap1\n      pop\n        /* \"#utility.yul\":7057:7476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7482:7650   */\n    tag_198:\n        /* \"#utility.yul\":7622:7642   */\n      0x616d6f756e74206973203e207374616b65640000000000000000000000000000\n        /* \"#utility.yul\":7618:7619   */\n      0x00\n        /* \"#utility.yul\":7610:7616   */\n      dup3\n        /* \"#utility.yul\":7606:7620   */\n      add\n        /* \"#utility.yul\":7599:7643   */\n      mstore\n        /* \"#utility.yul\":7482:7650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:8022   */\n    tag_199:\n        /* \"#utility.yul\":7798:7801   */\n      0x00\n        /* \"#utility.yul\":7819:7886   */\n      tag_290\n        /* \"#utility.yul\":7883:7885   */\n      0x12\n        /* \"#utility.yul\":7878:7881   */\n      dup4\n        /* \"#utility.yul\":7819:7886   */\n      tag_176\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7812:7886   */\n      swap2\n      pop\n        /* \"#utility.yul\":7895:7988   */\n      tag_291\n        /* \"#utility.yul\":7984:7987   */\n      dup3\n        /* \"#utility.yul\":7895:7988   */\n      tag_198\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8013:8015   */\n      0x20\n        /* \"#utility.yul\":8008:8011   */\n      dup3\n        /* \"#utility.yul\":8004:8016   */\n      add\n        /* \"#utility.yul\":7997:8016   */\n      swap1\n      pop\n        /* \"#utility.yul\":7656:8022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8028:8447   */\n    tag_96:\n        /* \"#utility.yul\":8194:8198   */\n      0x00\n        /* \"#utility.yul\":8232:8234   */\n      0x20\n        /* \"#utility.yul\":8221:8230   */\n      dup3\n        /* \"#utility.yul\":8217:8235   */\n      add\n        /* \"#utility.yul\":8209:8235   */\n      swap1\n      pop\n        /* \"#utility.yul\":8281:8290   */\n      dup2\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8271:8291   */\n      sub\n        /* \"#utility.yul\":8267:8268   */\n      0x00\n        /* \"#utility.yul\":8256:8265   */\n      dup4\n        /* \"#utility.yul\":8252:8269   */\n      add\n        /* \"#utility.yul\":8245:8292   */\n      mstore\n        /* \"#utility.yul\":8309:8440   */\n      tag_293\n        /* \"#utility.yul\":8435:8439   */\n      dup2\n        /* \"#utility.yul\":8309:8440   */\n      tag_199\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8301:8440   */\n      swap1\n      pop\n        /* \"#utility.yul\":8028:8447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8453:8633   */\n    tag_200:\n        /* \"#utility.yul\":8501:8578   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8498:8499   */\n      0x00\n        /* \"#utility.yul\":8491:8579   */\n      mstore\n        /* \"#utility.yul\":8598:8602   */\n      0x11\n        /* \"#utility.yul\":8595:8596   */\n      0x04\n        /* \"#utility.yul\":8588:8603   */\n      mstore\n        /* \"#utility.yul\":8622:8626   */\n      0x24\n        /* \"#utility.yul\":8619:8620   */\n      0x00\n        /* \"#utility.yul\":8612:8627   */\n      revert\n        /* \"#utility.yul\":8639:8833   */\n    tag_99:\n        /* \"#utility.yul\":8679:8683   */\n      0x00\n        /* \"#utility.yul\":8699:8719   */\n      tag_296\n        /* \"#utility.yul\":8717:8718   */\n      dup3\n        /* \"#utility.yul\":8699:8719   */\n      tag_187\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8694:8719   */\n      swap2\n      pop\n        /* \"#utility.yul\":8733:8753   */\n      tag_297\n        /* \"#utility.yul\":8751:8752   */\n      dup4\n        /* \"#utility.yul\":8733:8753   */\n      tag_187\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8728:8753   */\n      swap3\n      pop\n        /* \"#utility.yul\":8777:8778   */\n      dup3\n        /* \"#utility.yul\":8774:8775   */\n      dup3\n        /* \"#utility.yul\":8770:8779   */\n      sub\n        /* \"#utility.yul\":8762:8779   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:8802   */\n      dup2\n        /* \"#utility.yul\":8795:8799   */\n      dup2\n        /* \"#utility.yul\":8792:8803   */\n      gt\n        /* \"#utility.yul\":8789:8826   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8806:8824   */\n      tag_299\n      tag_200\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8789:8826   */\n    tag_298:\n        /* \"#utility.yul\":8639:8833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8839:9003   */\n    tag_201:\n        /* \"#utility.yul\":8979:8995   */\n      0x7374616b6564206973203c3d2030000000000000000000000000000000000000\n        /* \"#utility.yul\":8975:8976   */\n      0x00\n        /* \"#utility.yul\":8967:8973   */\n      dup3\n        /* \"#utility.yul\":8963:8977   */\n      add\n        /* \"#utility.yul\":8956:8996   */\n      mstore\n        /* \"#utility.yul\":8839:9003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9009:9375   */\n    tag_202:\n        /* \"#utility.yul\":9151:9154   */\n      0x00\n        /* \"#utility.yul\":9172:9239   */\n      tag_302\n        /* \"#utility.yul\":9236:9238   */\n      0x0e\n        /* \"#utility.yul\":9231:9234   */\n      dup4\n        /* \"#utility.yul\":9172:9239   */\n      tag_176\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9165:9239   */\n      swap2\n      pop\n        /* \"#utility.yul\":9248:9341   */\n      tag_303\n        /* \"#utility.yul\":9337:9340   */\n      dup3\n        /* \"#utility.yul\":9248:9341   */\n      tag_201\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9366:9368   */\n      0x20\n        /* \"#utility.yul\":9361:9364   */\n      dup3\n        /* \"#utility.yul\":9357:9369   */\n      add\n        /* \"#utility.yul\":9350:9369   */\n      swap1\n      pop\n        /* \"#utility.yul\":9009:9375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9381:9800   */\n    tag_105:\n        /* \"#utility.yul\":9547:9551   */\n      0x00\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9574:9583   */\n      dup3\n        /* \"#utility.yul\":9570:9588   */\n      add\n        /* \"#utility.yul\":9562:9588   */\n      swap1\n      pop\n        /* \"#utility.yul\":9634:9643   */\n      dup2\n        /* \"#utility.yul\":9628:9632   */\n      dup2\n        /* \"#utility.yul\":9624:9644   */\n      sub\n        /* \"#utility.yul\":9620:9621   */\n      0x00\n        /* \"#utility.yul\":9609:9618   */\n      dup4\n        /* \"#utility.yul\":9605:9622   */\n      add\n        /* \"#utility.yul\":9598:9645   */\n      mstore\n        /* \"#utility.yul\":9662:9793   */\n      tag_305\n        /* \"#utility.yul\":9788:9792   */\n      dup2\n        /* \"#utility.yul\":9662:9793   */\n      tag_202\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9654:9793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9381:9800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:10216   */\n    tag_108:\n        /* \"#utility.yul\":9846:9853   */\n      0x00\n        /* \"#utility.yul\":9869:9889   */\n      tag_307\n        /* \"#utility.yul\":9887:9888   */\n      dup3\n        /* \"#utility.yul\":9869:9889   */\n      tag_187\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9864:9889   */\n      swap2\n      pop\n        /* \"#utility.yul\":9903:9923   */\n      tag_308\n        /* \"#utility.yul\":9921:9922   */\n      dup4\n        /* \"#utility.yul\":9903:9923   */\n      tag_187\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9898:9923   */\n      swap3\n      pop\n        /* \"#utility.yul\":9958:9959   */\n      dup3\n        /* \"#utility.yul\":9955:9956   */\n      dup3\n        /* \"#utility.yul\":9951:9960   */\n      mul\n        /* \"#utility.yul\":9980:10010   */\n      tag_309\n        /* \"#utility.yul\":9998:10009   */\n      dup2\n        /* \"#utility.yul\":9980:10010   */\n      tag_187\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9969:10010   */\n      swap2\n      pop\n        /* \"#utility.yul\":10159:10160   */\n      dup3\n        /* \"#utility.yul\":10150:10157   */\n      dup3\n        /* \"#utility.yul\":10146:10161   */\n      div\n        /* \"#utility.yul\":10143:10144   */\n      dup5\n        /* \"#utility.yul\":10140:10162   */\n      eq\n        /* \"#utility.yul\":10120:10121   */\n      dup4\n        /* \"#utility.yul\":10113:10122   */\n      iszero\n        /* \"#utility.yul\":10093:10176   */\n      or\n        /* \"#utility.yul\":10070:10209   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":10189:10207   */\n      tag_311\n      tag_200\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10070:10209   */\n    tag_310:\n        /* \"#utility.yul\":9854:10216   */\n      pop\n        /* \"#utility.yul\":9806:10216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10222:10402   */\n    tag_203:\n        /* \"#utility.yul\":10270:10347   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10267:10268   */\n      0x00\n        /* \"#utility.yul\":10260:10348   */\n      mstore\n        /* \"#utility.yul\":10367:10371   */\n      0x12\n        /* \"#utility.yul\":10364:10365   */\n      0x04\n        /* \"#utility.yul\":10357:10372   */\n      mstore\n        /* \"#utility.yul\":10391:10395   */\n      0x24\n        /* \"#utility.yul\":10388:10389   */\n      0x00\n        /* \"#utility.yul\":10381:10396   */\n      revert\n        /* \"#utility.yul\":10408:10593   */\n    tag_110:\n        /* \"#utility.yul\":10448:10449   */\n      0x00\n        /* \"#utility.yul\":10465:10485   */\n      tag_314\n        /* \"#utility.yul\":10483:10484   */\n      dup3\n        /* \"#utility.yul\":10465:10485   */\n      tag_187\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10460:10485   */\n      swap2\n      pop\n        /* \"#utility.yul\":10499:10519   */\n      tag_315\n        /* \"#utility.yul\":10517:10518   */\n      dup4\n        /* \"#utility.yul\":10499:10519   */\n      tag_187\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10494:10519   */\n      swap3\n      pop\n        /* \"#utility.yul\":10538:10539   */\n      dup3\n        /* \"#utility.yul\":10528:10563   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":10543:10561   */\n      tag_317\n      tag_203\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10528:10563   */\n    tag_316:\n        /* \"#utility.yul\":10585:10586   */\n      dup3\n        /* \"#utility.yul\":10582:10583   */\n      dup3\n        /* \"#utility.yul\":10578:10587   */\n      div\n        /* \"#utility.yul\":10573:10587   */\n      swap1\n      pop\n        /* \"#utility.yul\":10408:10593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10599:10769   */\n    tag_204:\n        /* \"#utility.yul\":10739:10761   */\n      0x62616c616e6365206973203c3d20616d6f756e74000000000000000000000000\n        /* \"#utility.yul\":10735:10736   */\n      0x00\n        /* \"#utility.yul\":10727:10733   */\n      dup3\n        /* \"#utility.yul\":10723:10737   */\n      add\n        /* \"#utility.yul\":10716:10762   */\n      mstore\n        /* \"#utility.yul\":10599:10769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10775:11141   */\n    tag_205:\n        /* \"#utility.yul\":10917:10920   */\n      0x00\n        /* \"#utility.yul\":10938:11005   */\n      tag_320\n        /* \"#utility.yul\":11002:11004   */\n      0x14\n        /* \"#utility.yul\":10997:11000   */\n      dup4\n        /* \"#utility.yul\":10938:11005   */\n      tag_176\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10931:11005   */\n      swap2\n      pop\n        /* \"#utility.yul\":11014:11107   */\n      tag_321\n        /* \"#utility.yul\":11103:11106   */\n      dup3\n        /* \"#utility.yul\":11014:11107   */\n      tag_204\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":11132:11134   */\n      0x20\n        /* \"#utility.yul\":11127:11130   */\n      dup3\n        /* \"#utility.yul\":11123:11135   */\n      add\n        /* \"#utility.yul\":11116:11135   */\n      swap1\n      pop\n        /* \"#utility.yul\":10775:11141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11147:11566   */\n    tag_126:\n        /* \"#utility.yul\":11313:11317   */\n      0x00\n        /* \"#utility.yul\":11351:11353   */\n      0x20\n        /* \"#utility.yul\":11340:11349   */\n      dup3\n        /* \"#utility.yul\":11336:11354   */\n      add\n        /* \"#utility.yul\":11328:11354   */\n      swap1\n      pop\n        /* \"#utility.yul\":11400:11409   */\n      dup2\n        /* \"#utility.yul\":11394:11398   */\n      dup2\n        /* \"#utility.yul\":11390:11410   */\n      sub\n        /* \"#utility.yul\":11386:11387   */\n      0x00\n        /* \"#utility.yul\":11375:11384   */\n      dup4\n        /* \"#utility.yul\":11371:11388   */\n      add\n        /* \"#utility.yul\":11364:11411   */\n      mstore\n        /* \"#utility.yul\":11428:11559   */\n      tag_323\n        /* \"#utility.yul\":11554:11558   */\n      dup2\n        /* \"#utility.yul\":11428:11559   */\n      tag_205\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11420:11559   */\n      swap1\n      pop\n        /* \"#utility.yul\":11147:11566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11572:11763   */\n    tag_131:\n        /* \"#utility.yul\":11612:11615   */\n      0x00\n        /* \"#utility.yul\":11631:11651   */\n      tag_325\n        /* \"#utility.yul\":11649:11650   */\n      dup3\n        /* \"#utility.yul\":11631:11651   */\n      tag_187\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11626:11651   */\n      swap2\n      pop\n        /* \"#utility.yul\":11665:11685   */\n      tag_326\n        /* \"#utility.yul\":11683:11684   */\n      dup4\n        /* \"#utility.yul\":11665:11685   */\n      tag_187\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":11660:11685   */\n      swap3\n      pop\n        /* \"#utility.yul\":11708:11709   */\n      dup3\n        /* \"#utility.yul\":11705:11706   */\n      dup3\n        /* \"#utility.yul\":11701:11710   */\n      add\n        /* \"#utility.yul\":11694:11710   */\n      swap1\n      pop\n        /* \"#utility.yul\":11729:11732   */\n      dup1\n        /* \"#utility.yul\":11726:11727   */\n      dup3\n        /* \"#utility.yul\":11723:11733   */\n      gt\n        /* \"#utility.yul\":11720:11756   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":11736:11754   */\n      tag_328\n      tag_200\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11720:11756   */\n    tag_327:\n        /* \"#utility.yul\":11572:11763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11769:11887   */\n    tag_206:\n        /* \"#utility.yul\":11856:11880   */\n      tag_330\n        /* \"#utility.yul\":11874:11879   */\n      dup2\n        /* \"#utility.yul\":11856:11880   */\n      tag_184\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11851:11854   */\n      dup3\n        /* \"#utility.yul\":11844:11881   */\n      mstore\n        /* \"#utility.yul\":11769:11887   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11893:12335   */\n    tag_145:\n        /* \"#utility.yul\":12042:12046   */\n      0x00\n        /* \"#utility.yul\":12080:12082   */\n      0x60\n        /* \"#utility.yul\":12069:12078   */\n      dup3\n        /* \"#utility.yul\":12065:12083   */\n      add\n        /* \"#utility.yul\":12057:12083   */\n      swap1\n      pop\n        /* \"#utility.yul\":12093:12164   */\n      tag_332\n        /* \"#utility.yul\":12161:12162   */\n      0x00\n        /* \"#utility.yul\":12150:12159   */\n      dup4\n        /* \"#utility.yul\":12146:12163   */\n      add\n        /* \"#utility.yul\":12137:12143   */\n      dup7\n        /* \"#utility.yul\":12093:12164   */\n      tag_206\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12174:12246   */\n      tag_333\n        /* \"#utility.yul\":12242:12244   */\n      0x20\n        /* \"#utility.yul\":12231:12240   */\n      dup4\n        /* \"#utility.yul\":12227:12245   */\n      add\n        /* \"#utility.yul\":12218:12224   */\n      dup6\n        /* \"#utility.yul\":12174:12246   */\n      tag_192\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":12256:12328   */\n      tag_334\n        /* \"#utility.yul\":12324:12326   */\n      0x40\n        /* \"#utility.yul\":12313:12322   */\n      dup4\n        /* \"#utility.yul\":12309:12327   */\n      add\n        /* \"#utility.yul\":12300:12306   */\n      dup5\n        /* \"#utility.yul\":12256:12328   */\n      tag_192\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11893:12335   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12341:12563   */\n    tag_150:\n        /* \"#utility.yul\":12434:12438   */\n      0x00\n        /* \"#utility.yul\":12472:12474   */\n      0x20\n        /* \"#utility.yul\":12461:12470   */\n      dup3\n        /* \"#utility.yul\":12457:12475   */\n      add\n        /* \"#utility.yul\":12449:12475   */\n      swap1\n      pop\n        /* \"#utility.yul\":12485:12556   */\n      tag_336\n        /* \"#utility.yul\":12553:12554   */\n      0x00\n        /* \"#utility.yul\":12542:12551   */\n      dup4\n        /* \"#utility.yul\":12538:12555   */\n      add\n        /* \"#utility.yul\":12529:12535   */\n      dup5\n        /* \"#utility.yul\":12485:12556   */\n      tag_206\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12341:12563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a8ccb8afe482a8e95309cb1b125d0d3e6d02e9a58a5e616b7a4a3677c5e132f064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 195,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 333,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:1",
										"nodeType": "YulBlock",
										"src": "0:7000:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5279:81:1",
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nativeSrc": "5289:65:1",
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:1",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:1",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nativeSrc": "5411:51:1",
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nativeSrc": "5421:35:1",
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nativeSrc": "5432:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:1",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:1",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nativeSrc": "5533:53:1",
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nativeSrc": "5555:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nativeSrc": "5543:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nativeSrc": "5543:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:1",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:1",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nativeSrc": "5690:124:1",
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nativeSrc": "5700:26:1",
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nativeSrc": "5708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nativeSrc": "5789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nativeSrc": "5736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nativeSrc": "5736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:1",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:1",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:1",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											},
											{
												"body": {
													"nativeSrc": "5848:152:1",
													"nodeType": "YulBlock",
													"src": "5848:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:1"
																},
																"nativeSrc": "5858:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:1"
															},
															"nativeSrc": "5858:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:1"
																},
																"nativeSrc": "5955:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:1"
															},
															"nativeSrc": "5955:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:1"
																},
																"nativeSrc": "5979:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:1"
															},
															"nativeSrc": "5979:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:1"
											},
											{
												"body": {
													"nativeSrc": "6050:147:1",
													"nodeType": "YulBlock",
													"src": "6050:147:1",
													"statements": [
														{
															"nativeSrc": "6060:25:1",
															"nodeType": "YulAssignment",
															"src": "6060:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:1"
																},
																"nativeSrc": "6065:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:1"
																}
															]
														},
														{
															"nativeSrc": "6094:25:1",
															"nodeType": "YulAssignment",
															"src": "6094:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:1"
																},
																"nativeSrc": "6099:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:1"
																}
															]
														},
														{
															"nativeSrc": "6128:16:1",
															"nodeType": "YulAssignment",
															"src": "6128:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:1"
																},
																"nativeSrc": "6135:9:1",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:1",
																"nodeType": "YulBlock",
																"src": "6168:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:1"
																			},
																			"nativeSrc": "6170:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:1"
																		},
																		"nativeSrc": "6170:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:1"
																},
																"nativeSrc": "6157:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:1"
															},
															"nativeSrc": "6154:36:1",
															"nodeType": "YulIf",
															"src": "6154:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:1",
														"nodeType": "YulTypedName",
														"src": "6037:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:1",
														"nodeType": "YulTypedName",
														"src": "6040:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:1",
														"nodeType": "YulTypedName",
														"src": "6046:3:1",
														"type": ""
													}
												],
												"src": "6006:191:1"
											},
											{
												"body": {
													"nativeSrc": "6268:53:1",
													"nodeType": "YulBlock",
													"src": "6268:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:1"
																		},
																		"nativeSrc": "6290:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:1"
																},
																"nativeSrc": "6278:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:1"
															},
															"nativeSrc": "6278:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:1",
														"nodeType": "YulTypedName",
														"src": "6256:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:1",
														"nodeType": "YulTypedName",
														"src": "6263:3:1",
														"type": ""
													}
												],
												"src": "6203:118:1"
											},
											{
												"body": {
													"nativeSrc": "6481:288:1",
													"nodeType": "YulBlock",
													"src": "6481:288:1",
													"statements": [
														{
															"nativeSrc": "6491:26:1",
															"nodeType": "YulAssignment",
															"src": "6491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:1"
																},
																"nativeSrc": "6499:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:1"
																		},
																		"nativeSrc": "6580:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:1"
																},
																"nativeSrc": "6527:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:1"
															},
															"nativeSrc": "6527:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:1"
																		},
																		"nativeSrc": "6661:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:1"
																},
																"nativeSrc": "6608:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:1"
															},
															"nativeSrc": "6608:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:1"
																		},
																		"nativeSrc": "6743:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:1"
																},
																"nativeSrc": "6690:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:1"
															},
															"nativeSrc": "6690:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:1",
														"nodeType": "YulTypedName",
														"src": "6437:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:1",
														"nodeType": "YulTypedName",
														"src": "6449:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:1",
														"nodeType": "YulTypedName",
														"src": "6457:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:1",
														"nodeType": "YulTypedName",
														"src": "6465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:1",
														"nodeType": "YulTypedName",
														"src": "6476:4:1",
														"type": ""
													}
												],
												"src": "6327:442:1"
											},
											{
												"body": {
													"nativeSrc": "6873:124:1",
													"nodeType": "YulBlock",
													"src": "6873:124:1",
													"statements": [
														{
															"nativeSrc": "6883:26:1",
															"nodeType": "YulAssignment",
															"src": "6883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:1"
																},
																"nativeSrc": "6891:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:1"
																		},
																		"nativeSrc": "6972:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:1"
																},
																"nativeSrc": "6919:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:1"
															},
															"nativeSrc": "6919:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:1",
														"nodeType": "YulTypedName",
														"src": "6845:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:1",
														"nodeType": "YulTypedName",
														"src": "6857:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:1",
														"nodeType": "YulTypedName",
														"src": "6868:4:1",
														"type": ""
													}
												],
												"src": "6775:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600d81526020017f4669786564205374616b696e67000000000000000000000000000000000000008152506040518060400160405280600381526020017f464958000000000000000000000000000000000000000000000000000000000081525081600390816200008e9190620005d5565b508060049081620000a09190620005d5565b505050620000bd33670de0b6b3a7640000620000c360201b60201c565b620007e5565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000136575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200012d9190620006fc565b60405180910390fd5b620001495f83836200014d60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001a1578060025f82825462000194919062000744565b9250508190555062000272565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200022d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040162000224939291906200078f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002bb578060025f828254039250508190555062000305565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003649190620007ca565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620003ed57607f821691505b602082108103620004035762000402620003a8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004677fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200042a565b6200047386836200042a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004bd620004b7620004b1846200048b565b62000494565b6200048b565b9050919050565b5f819050919050565b620004d8836200049d565b620004f0620004e782620004c4565b84845462000436565b825550505050565b5f90565b62000506620004f8565b62000513818484620004cd565b505050565b5b818110156200053a576200052e5f82620004fc565b60018101905062000519565b5050565b601f8211156200058957620005538162000409565b6200055e846200041b565b810160208510156200056e578190505b620005866200057d856200041b565b83018262000518565b50505b505050565b5f82821c905092915050565b5f620005ab5f19846008026200058e565b1980831691505092915050565b5f620005c583836200059a565b9150826002028217905092915050565b620005e08262000371565b67ffffffffffffffff811115620005fc57620005fb6200037b565b5b620006088254620003d5565b620006158282856200053e565b5f60209050601f8311600181146200064b575f841562000636578287015190505b620006428582620005b8565b865550620006b1565b601f1984166200065b8662000409565b5f5b8281101562000684578489015182556001820191506020850194506020810190506200065d565b86831015620006a45784890151620006a0601f8916826200059a565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620006e482620006b9565b9050919050565b620006f681620006d8565b82525050565b5f602082019050620007115f830184620006eb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000750826200048b565b91506200075d836200048b565b925082820190508082111562000778576200077762000717565b5b92915050565b62000789816200048b565b82525050565b5f606082019050620007a45f830186620006eb565b620007b360208301856200077e565b620007c260408301846200077e565b949350505050565b5f602082019050620007df5f8301846200077e565b92915050565b6115f880620007f35f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80634e71d92d1161008a57806398807d841161006457806398807d84146101ff578063a694fc3a1461022f578063a9059cbb1461024b578063dd62ed3e1461027b576100cd565b80634e71d92d146101a757806370a08231146101b157806395d89b41146101e1576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d5780632e17de781461016d578063313ce56714610189575b5f80fd5b6100d96102ab565b6040516100e69190610fd5565b60405180910390f35b61010960048036038101906101049190611086565b61033b565b60405161011691906110de565b60405180910390f35b61012761035d565b6040516101349190611106565b60405180910390f35b6101576004803603810190610152919061111f565b610366565b60405161016491906110de565b60405180910390f35b6101876004803603810190610182919061116f565b610394565b005b6101916104bf565b60405161019e91906111b5565b60405180910390f35b6101af6104c7565b005b6101cb60048036038101906101c691906111ce565b61063d565b6040516101d89190611106565b60405180910390f35b6101e9610682565b6040516101f69190610fd5565b60405180910390f35b610219600480360381019061021491906111ce565b610712565b6040516102269190611106565b60405180910390f35b6102496004803603810190610244919061116f565b610727565b005b61026560048036038101906102609190611086565b6108a5565b60405161027291906110de565b60405180910390f35b610295600480360381019061029091906111f9565b6108c7565b6040516102a29190611106565b60405180910390f35b6060600380546102ba90611264565b80601f01602080910402602001604051908101604052809291908181526020018280546102e690611264565b80156103315780601f1061030857610100808354040283529160200191610331565b820191905f5260205f20905b81548152906001019060200180831161031457829003601f168201915b5050505050905090565b5f80610345610949565b9050610352818585610950565b600191505092915050565b5f600254905090565b5f80610370610949565b905061037d858285610962565b6103888585856109f4565b60019150509392505050565b5f81116103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd906112de565b60405180910390fd5b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d90611346565b60405180910390fd5b61045e6104c7565b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104aa9190611391565b925050819055506104bc3033836109f4565b50565b5f6012905090565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d9061140e565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426105909190611391565b90505f6301e143208260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105e1919061142c565b6105eb919061149a565b90506105f73382610ae4565b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461069190611264565b80601f01602080910402602001604051908101604052809291908181526020018280546106bd90611264565b80156107085780601f106106df57610100808354040283529160200191610708565b820191905f5260205f20905b8154815290600101906020018083116106eb57829003601f168201915b5050505050905090565b6005602052805f5260405f205f915090505481565b5f8111610769576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610760906112de565b60405180910390fd5b806107733361063d565b10156107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab90611514565b60405180910390fd5b6107bf3330836109f4565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561080d5761080c6104c7565b5b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461089b9190611532565b9250508190555050565b5f806108af610949565b90506108bc8185856109f4565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61095d8383836001610b63565b505050565b5f61096d84846108c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109ee57818110156109df578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109d693929190611574565b60405180910390fd5b6109ed84848484035f610b63565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a64575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a5b91906115a9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ad4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610acb91906115a9565b60405180910390fd5b610adf838383610d32565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b54575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4b91906115a9565b60405180910390fd5b610b5f5f8383610d32565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bd3575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bca91906115a9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c43575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c3a91906115a9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d2c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d239190611106565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d82578060025f828254610d769190611532565b92505081905550610e50565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e0b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e0293929190611574565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e97578060025f8282540392505081905550610ee1565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3e9190611106565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f82578082015181840152602081019050610f67565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fa782610f4b565b610fb18185610f55565b9350610fc1818560208601610f65565b610fca81610f8d565b840191505092915050565b5f6020820190508181035f830152610fed8184610f9d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61102282610ff9565b9050919050565b61103281611018565b811461103c575f80fd5b50565b5f8135905061104d81611029565b92915050565b5f819050919050565b61106581611053565b811461106f575f80fd5b50565b5f813590506110808161105c565b92915050565b5f806040838503121561109c5761109b610ff5565b5b5f6110a98582860161103f565b92505060206110ba85828601611072565b9150509250929050565b5f8115159050919050565b6110d8816110c4565b82525050565b5f6020820190506110f15f8301846110cf565b92915050565b61110081611053565b82525050565b5f6020820190506111195f8301846110f7565b92915050565b5f805f6060848603121561113657611135610ff5565b5b5f6111438682870161103f565b93505060206111548682870161103f565b925050604061116586828701611072565b9150509250925092565b5f6020828403121561118457611183610ff5565b5b5f61119184828501611072565b91505092915050565b5f60ff82169050919050565b6111af8161119a565b82525050565b5f6020820190506111c85f8301846111a6565b92915050565b5f602082840312156111e3576111e2610ff5565b5b5f6111f08482850161103f565b91505092915050565b5f806040838503121561120f5761120e610ff5565b5b5f61121c8582860161103f565b925050602061122d8582860161103f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061127b57607f821691505b60208210810361128e5761128d611237565b5b50919050565b7f616d6f756e74206973203c3d20300000000000000000000000000000000000005f82015250565b5f6112c8600e83610f55565b91506112d382611294565b602082019050919050565b5f6020820190508181035f8301526112f5816112bc565b9050919050565b7f616d6f756e74206973203e207374616b656400000000000000000000000000005f82015250565b5f611330601283610f55565b915061133b826112fc565b602082019050919050565b5f6020820190508181035f83015261135d81611324565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61139b82611053565b91506113a683611053565b92508282039050818111156113be576113bd611364565b5b92915050565b7f7374616b6564206973203c3d20300000000000000000000000000000000000005f82015250565b5f6113f8600e83610f55565b9150611403826113c4565b602082019050919050565b5f6020820190508181035f830152611425816113ec565b9050919050565b5f61143682611053565b915061144183611053565b925082820261144f81611053565b9150828204841483151761146657611465611364565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114a482611053565b91506114af83611053565b9250826114bf576114be61146d565b5b828204905092915050565b7f62616c616e6365206973203c3d20616d6f756e740000000000000000000000005f82015250565b5f6114fe601483610f55565b9150611509826114ca565b602082019050919050565b5f6020820190508181035f83015261152b816114f2565b9050919050565b5f61153c82611053565b915061154783611053565b925082820190508082111561155f5761155e611364565b5b92915050565b61156e81611018565b82525050565b5f6060820190506115875f830186611565565b61159460208301856110f7565b6115a160408301846110f7565b949350505050565b5f6020820190506115bc5f830184611565565b9291505056fea2646970667358221220a8ccb8afe482a8e95309cb1b125d0d3e6d02e9a58a5e616b7a4a3677c5e132f064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4669786564205374616B696E6700000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4649580000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x5D5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x5D5 JUMP JUMPDEST POP POP POP PUSH3 0xBD CALLER PUSH8 0xDE0B6B3A7640000 PUSH3 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x7E5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x136 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12D SWAP2 SWAP1 PUSH3 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x149 PUSH0 DUP4 DUP4 PUSH3 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1A1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x194 SWAP2 SWAP1 PUSH3 0x744 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x272 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x22D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2BB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x305 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x364 SWAP2 SWAP1 PUSH3 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x403 JUMPI PUSH3 0x402 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x467 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x42A JUMP JUMPDEST PUSH3 0x473 DUP7 DUP4 PUSH3 0x42A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4BD PUSH3 0x4B7 PUSH3 0x4B1 DUP5 PUSH3 0x48B JUMP JUMPDEST PUSH3 0x494 JUMP JUMPDEST PUSH3 0x48B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4D8 DUP4 PUSH3 0x49D JUMP JUMPDEST PUSH3 0x4F0 PUSH3 0x4E7 DUP3 PUSH3 0x4C4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x436 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x506 PUSH3 0x4F8 JUMP JUMPDEST PUSH3 0x513 DUP2 DUP5 DUP5 PUSH3 0x4CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x53A JUMPI PUSH3 0x52E PUSH0 DUP3 PUSH3 0x4FC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x519 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x589 JUMPI PUSH3 0x553 DUP2 PUSH3 0x409 JUMP JUMPDEST PUSH3 0x55E DUP5 PUSH3 0x41B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x56E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x586 PUSH3 0x57D DUP6 PUSH3 0x41B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x518 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5AB PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x58E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5C5 DUP4 DUP4 PUSH3 0x59A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5E0 DUP3 PUSH3 0x371 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5FC JUMPI PUSH3 0x5FB PUSH3 0x37B JUMP JUMPDEST JUMPDEST PUSH3 0x608 DUP3 SLOAD PUSH3 0x3D5 JUMP JUMPDEST PUSH3 0x615 DUP3 DUP3 DUP6 PUSH3 0x53E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x64B JUMPI PUSH0 DUP5 ISZERO PUSH3 0x636 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x642 DUP6 DUP3 PUSH3 0x5B8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6B1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x65B DUP7 PUSH3 0x409 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x684 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x65D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6A4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6A0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x59A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x6E4 DUP3 PUSH3 0x6B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6F6 DUP2 PUSH3 0x6D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x711 PUSH0 DUP4 ADD DUP5 PUSH3 0x6EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x750 DUP3 PUSH3 0x48B JUMP JUMPDEST SWAP2 POP PUSH3 0x75D DUP4 PUSH3 0x48B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x778 JUMPI PUSH3 0x777 PUSH3 0x717 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x789 DUP2 PUSH3 0x48B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x7A4 PUSH0 DUP4 ADD DUP7 PUSH3 0x6EB JUMP JUMPDEST PUSH3 0x7B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x77E JUMP JUMPDEST PUSH3 0x7C2 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x77E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7DF PUSH0 DUP4 ADD DUP5 PUSH3 0x77E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F8 DUP1 PUSH3 0x7F3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x98807D84 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x98807D84 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x27B JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2BA SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E6 SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x331 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x308 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x331 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x314 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x345 PUSH2 0x949 JUMP JUMPDEST SWAP1 POP PUSH2 0x352 DUP2 DUP6 DUP6 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x370 PUSH2 0x949 JUMP JUMPDEST SWAP1 POP PUSH2 0x37D DUP6 DUP3 DUP6 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x388 DUP6 DUP6 DUP6 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CD SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44D SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45E PUSH2 0x4C7 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4BC ADDRESS CALLER DUP4 PUSH2 0x9F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E14320 DUP3 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP PUSH2 0x5F7 CALLER DUP3 PUSH2 0xAE4 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x691 SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BD SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x773 CALLER PUSH2 0x63D JUMP JUMPDEST LT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BF CALLER ADDRESS DUP4 PUSH2 0x9F4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x4C7 JUMP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8AF PUSH2 0x949 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC DUP2 DUP6 DUP6 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x95D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96D DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9EE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9DF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9ED DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB63 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADF DUP4 DUP4 DUP4 PUSH2 0xD32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5F PUSH0 DUP4 DUP4 PUSH2 0xD32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCA SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC43 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD2C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD82 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE50 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE97 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF82 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF67 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA7 DUP3 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0xFB1 DUP2 DUP6 PUSH2 0xF55 JUMP JUMPDEST SWAP4 POP PUSH2 0xFC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xFCA DUP2 PUSH2 0xF8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFED DUP2 DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1022 DUP3 PUSH2 0xFF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1032 DUP2 PUSH2 0x1018 JUMP JUMPDEST DUP2 EQ PUSH2 0x103C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x104D DUP2 PUSH2 0x1029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x1053 JUMP JUMPDEST DUP2 EQ PUSH2 0x106F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1080 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109B PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A9 DUP6 DUP3 DUP7 ADD PUSH2 0x103F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10BA DUP6 DUP3 DUP7 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D8 DUP2 PUSH2 0x10C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x10CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1100 DUP2 PUSH2 0x1053 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH0 DUP4 ADD DUP5 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1143 DUP7 DUP3 DUP8 ADD PUSH2 0x103F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1154 DUP7 DUP3 DUP8 ADD PUSH2 0x103F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1165 DUP7 DUP3 DUP8 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x1183 PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1191 DUP5 DUP3 DUP6 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x119A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x11A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E2 PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F0 DUP5 DUP3 DUP6 ADD PUSH2 0x103F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121C DUP6 DUP3 DUP7 ADD PUSH2 0x103F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x122D DUP6 DUP3 DUP7 ADD PUSH2 0x103F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x127B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x1237 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206973203C3D2030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C8 PUSH1 0xE DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D3 DUP3 PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F5 DUP2 PUSH2 0x12BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206973203E207374616B65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1330 PUSH1 0x12 DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x133B DUP3 PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x135D DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x139B DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A6 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x1364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374616B6564206973203C3D2030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13F8 PUSH1 0xE DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1403 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1425 DUP2 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1436 DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x1441 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x144F DUP2 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1466 JUMPI PUSH2 0x1465 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14A4 DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AF DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62616C616E6365206973203C3D20616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14FE PUSH1 0x14 DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1509 DUP3 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152B DUP2 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x153C DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x1547 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x1018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1587 PUSH0 DUP4 ADD DUP7 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x1594 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10F7 JUMP JUMPDEST PUSH2 0x15A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP5 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xCC 0xB8 0xAF 0xE4 DUP3 0xA8 0xE9 MSTORE8 MULMOD 0xCB SHL SLT TSTORE 0xD RETURNDATACOPY PUSH14 0x2E9A58A5E616B7A4A3677C5E132 CREATE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "22134:2659:0:-:0;;;22421:99;;;;;;;;;;12788:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12862:5;12854;:13;;;;;;:::i;:::-;;12887:7;12877;:17;;;;;;:::i;:::-;;12788:113;;22475:38:::1;22481:10;22493:19;22475:5;;;:38;;:::i;:::-;22134:2659:::0;;18613:208;18702:1;18683:21;;:7;:21;;;18679:91;;18756:1;18727:32;;;;;;;;;;;:::i;:::-;;;;;;;;18679:91;18779:35;18795:1;18799:7;18808:5;18779:7;;;:35;;:::i;:::-;18613:208;;:::o;17163:1107::-;17268:1;17252:18;;:4;:18;;;17248:540;;17404:5;17388:12;;:21;;;;;;;:::i;:::-;;;;;;;;17248:540;;;17440:19;17462:9;:15;17472:4;17462:15;;;;;;;;;;;;;;;;17440:37;;17509:5;17495:11;:19;17491:115;;;17566:4;17572:11;17585:5;17541:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17491:115;17758:5;17744:11;:19;17726:9;:15;17736:4;17726:15;;;;;;;;;;;;;;;:37;;;;17426:362;17248:540;17816:1;17802:16;;:2;:16;;;17798:425;;17981:5;17965:12;;:21;;;;;;;;;;;17798:425;;;18193:5;18176:9;:13;18186:2;18176:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17798:425;18253:2;18238:25;;18247:4;18238:25;;;18257:5;18238:25;;;;;;:::i;:::-;;;;;;;;17163:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;22134:2659:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 2384,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 2915,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 2788,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_147": {
									"entryPoint": 2377,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 2402,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2548,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3378,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 2247,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 827,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1597,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_947": {
									"entryPoint": 1223,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1215,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_317": {
									"entryPoint": 683,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stake_855": {
									"entryPoint": 1831,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@staked_778": {
									"entryPoint": 1810,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1666,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 861,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 870,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 2213,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstake_898": {
									"entryPoint": 916,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8": {
									"entryPoint": 4860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7": {
									"entryPoint": 5060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12566:1",
										"nodeType": "YulBlock",
										"src": "0:12566:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:184:1",
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nativeSrc": "359:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:1",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:1",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:1",
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nativeSrc": "449:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nativeSrc": "468:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nativeSrc": "462:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nativeSrc": "442:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nativeSrc": "442:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nativeSrc": "386:13:1",
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nativeSrc": "378:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:1",
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nativeSrc": "402:15:1",
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:1",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nativeSrc": "407:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:1",
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nativeSrc": "507:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:1",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nativeSrc": "500:27:1",
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nativeSrc": "500:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nativeSrc": "587:54:1",
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nativeSrc": "597:38:1",
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nativeSrc": "611:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:1",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nativeSrc": "627:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nativeSrc": "607:28:1",
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:1",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:1",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nativeSrc": "739:285:1",
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nativeSrc": "749:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nativeSrc": "763:39:1",
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:1",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:1",
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nativeSrc": "818:71:1",
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:1",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nativeSrc": "933:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nativeSrc": "898:65:1",
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nativeSrc": "898:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nativeSrc": "972:46:1",
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nativeSrc": "988:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nativeSrc": "979:39:1",
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:1",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:1",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:1",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nativeSrc": "1148:195:1",
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nativeSrc": "1158:26:1",
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nativeSrc": "1166:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nativeSrc": "1201:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nativeSrc": "1194:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nativeSrc": "1250:86:1",
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nativeSrc": "1258:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:1",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:1",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:1",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nativeSrc": "1389:35:1",
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nativeSrc": "1399:19:1",
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nativeSrc": "1409:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:1",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nativeSrc": "1519:28:1",
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nativeSrc": "1529:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nativeSrc": "1529:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nativeSrc": "1642:28:1",
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nativeSrc": "1652:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nativeSrc": "1721:81:1",
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nativeSrc": "1731:65:1",
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nativeSrc": "1742:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:1",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:1",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nativeSrc": "1853:51:1",
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nativeSrc": "1863:35:1",
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nativeSrc": "1874:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:1",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:1",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nativeSrc": "1953:79:1",
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:1",
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nativeSrc": "2012:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nativeSrc": "2012:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nativeSrc": "1983:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nativeSrc": "1973:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nativeSrc": "1966:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nativeSrc": "1963:63:1",
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:1",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nativeSrc": "2090:87:1",
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nativeSrc": "2100:29:1",
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nativeSrc": "2109:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nativeSrc": "2138:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nativeSrc": "2138:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:1",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:1",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:1",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nativeSrc": "2228:32:1",
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nativeSrc": "2238:16:1",
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:1",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:1",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:1",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nativeSrc": "2309:79:1",
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:1",
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nativeSrc": "2368:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nativeSrc": "2368:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nativeSrc": "2339:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nativeSrc": "2329:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nativeSrc": "2322:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nativeSrc": "2319:63:1",
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:1",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nativeSrc": "2446:87:1",
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nativeSrc": "2456:29:1",
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nativeSrc": "2465:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nativeSrc": "2494:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nativeSrc": "2494:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:1",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:1",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nativeSrc": "2622:391:1",
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:1",
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nativeSrc": "2670:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nativeSrc": "2670:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nativeSrc": "2639:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nativeSrc": "2635:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nativeSrc": "2632:119:1",
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nativeSrc": "2761:117:1",
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nativeSrc": "2776:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nativeSrc": "2836:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nativeSrc": "2815:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:1",
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nativeSrc": "2903:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nativeSrc": "2964:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nativeSrc": "2943:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:1",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:1",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:1",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nativeSrc": "3061:48:1",
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nativeSrc": "3071:32:1",
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nativeSrc": "3089:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nativeSrc": "3082:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:1",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:1",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nativeSrc": "3174:50:1",
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nativeSrc": "3196:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nativeSrc": "3184:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nativeSrc": "3184:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:1",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:1",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nativeSrc": "3322:118:1",
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nativeSrc": "3332:26:1",
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nativeSrc": "3340:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nativeSrc": "3415:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nativeSrc": "3368:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nativeSrc": "3368:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:1",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:1",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nativeSrc": "3511:53:1",
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nativeSrc": "3533:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nativeSrc": "3521:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nativeSrc": "3521:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:1",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:1",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nativeSrc": "3668:124:1",
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nativeSrc": "3678:26:1",
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nativeSrc": "3686:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nativeSrc": "3714:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nativeSrc": "3714:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:1",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:1",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:1",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nativeSrc": "3898:519:1",
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:1",
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nativeSrc": "3946:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nativeSrc": "3946:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nativeSrc": "3915:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nativeSrc": "3911:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nativeSrc": "3908:119:1",
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nativeSrc": "4037:117:1",
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nativeSrc": "4052:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nativeSrc": "4112:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nativeSrc": "4091:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:1",
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nativeSrc": "4179:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nativeSrc": "4240:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nativeSrc": "4219:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:1",
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nativeSrc": "4307:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nativeSrc": "4368:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nativeSrc": "4347:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:1",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:1",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:1",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:1",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nativeSrc": "4489:263:1",
													"nodeType": "YulBlock",
													"src": "4489:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4535:83:1",
																"nodeType": "YulBlock",
																"src": "4535:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4537:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4537:77:1"
																			},
																			"nativeSrc": "4537:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4537:79:1"
																		},
																		"nativeSrc": "4537:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4537:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4510:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4510:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4519:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:1"
																		},
																		"nativeSrc": "4506:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4506:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:1"
																},
																"nativeSrc": "4502:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4502:32:1"
															},
															"nativeSrc": "4499:119:1",
															"nodeType": "YulIf",
															"src": "4499:119:1"
														},
														{
															"nativeSrc": "4628:117:1",
															"nodeType": "YulBlock",
															"src": "4628:117:1",
															"statements": [
																{
																	"nativeSrc": "4643:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4643:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4657:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4657:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4647:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4647:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4672:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4672:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4707:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4718:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4703:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:1"
																				},
																				"nativeSrc": "4703:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4727:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4682:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:1"
																		},
																		"nativeSrc": "4682:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4672:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4423:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4459:9:1",
														"nodeType": "YulTypedName",
														"src": "4459:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4470:7:1",
														"nodeType": "YulTypedName",
														"src": "4470:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4482:6:1",
														"nodeType": "YulTypedName",
														"src": "4482:6:1",
														"type": ""
													}
												],
												"src": "4423:329:1"
											},
											{
												"body": {
													"nativeSrc": "4801:43:1",
													"nodeType": "YulBlock",
													"src": "4801:43:1",
													"statements": [
														{
															"nativeSrc": "4811:27:1",
															"nodeType": "YulAssignment",
															"src": "4811:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4826:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4833:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:1"
																},
																"nativeSrc": "4822:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4822:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4811:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4758:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4783:5:1",
														"nodeType": "YulTypedName",
														"src": "4783:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4793:7:1",
														"nodeType": "YulTypedName",
														"src": "4793:7:1",
														"type": ""
													}
												],
												"src": "4758:86:1"
											},
											{
												"body": {
													"nativeSrc": "4911:51:1",
													"nodeType": "YulBlock",
													"src": "4911:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4928:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4949:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4933:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4933:15:1"
																		},
																		"nativeSrc": "4933:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:1"
																},
																"nativeSrc": "4921:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4921:35:1"
															},
															"nativeSrc": "4921:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4921:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4850:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4899:5:1",
														"nodeType": "YulTypedName",
														"src": "4899:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4906:3:1",
														"nodeType": "YulTypedName",
														"src": "4906:3:1",
														"type": ""
													}
												],
												"src": "4850:112:1"
											},
											{
												"body": {
													"nativeSrc": "5062:120:1",
													"nodeType": "YulBlock",
													"src": "5062:120:1",
													"statements": [
														{
															"nativeSrc": "5072:26:1",
															"nodeType": "YulAssignment",
															"src": "5072:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:1"
																},
																"nativeSrc": "5080:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5080:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5148:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5172:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5172:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:1"
																		},
																		"nativeSrc": "5157:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5157:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5108:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "5108:39:1"
																},
																"nativeSrc": "5108:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5108:67:1"
															},
															"nativeSrc": "5108:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5108:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4968:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5034:9:1",
														"nodeType": "YulTypedName",
														"src": "5034:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5046:6:1",
														"nodeType": "YulTypedName",
														"src": "5046:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5057:4:1",
														"nodeType": "YulTypedName",
														"src": "5057:4:1",
														"type": ""
													}
												],
												"src": "4968:214:1"
											},
											{
												"body": {
													"nativeSrc": "5254:263:1",
													"nodeType": "YulBlock",
													"src": "5254:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:1",
																"nodeType": "YulBlock",
																"src": "5300:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:1"
																			},
																			"nativeSrc": "5302:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:1"
																		},
																		"nativeSrc": "5302:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:1"
																		},
																		"nativeSrc": "5271:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nativeSrc": "5267:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:1"
															},
															"nativeSrc": "5264:119:1",
															"nodeType": "YulIf",
															"src": "5264:119:1"
														},
														{
															"nativeSrc": "5393:117:1",
															"nodeType": "YulBlock",
															"src": "5393:117:1",
															"statements": [
																{
																	"nativeSrc": "5408:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:1"
																				},
																				"nativeSrc": "5468:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5447:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:1"
																		},
																		"nativeSrc": "5447:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5188:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:1",
														"nodeType": "YulTypedName",
														"src": "5224:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:1",
														"nodeType": "YulTypedName",
														"src": "5235:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:1",
														"nodeType": "YulTypedName",
														"src": "5247:6:1",
														"type": ""
													}
												],
												"src": "5188:329:1"
											},
											{
												"body": {
													"nativeSrc": "5606:391:1",
													"nodeType": "YulBlock",
													"src": "5606:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5652:83:1",
																"nodeType": "YulBlock",
																"src": "5652:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5654:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:1"
																			},
																			"nativeSrc": "5654:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:1"
																		},
																		"nativeSrc": "5654:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nativeSrc": "5623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:1"
																},
																"nativeSrc": "5619:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5619:32:1"
															},
															"nativeSrc": "5616:119:1",
															"nodeType": "YulIf",
															"src": "5616:119:1"
														},
														{
															"nativeSrc": "5745:117:1",
															"nodeType": "YulBlock",
															"src": "5745:117:1",
															"statements": [
																{
																	"nativeSrc": "5760:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5774:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5764:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5789:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5789:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5824:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5835:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5820:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:1"
																				},
																				"nativeSrc": "5820:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5799:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:1"
																		},
																		"nativeSrc": "5799:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5789:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5872:118:1",
															"nodeType": "YulBlock",
															"src": "5872:118:1",
															"statements": [
																{
																	"nativeSrc": "5887:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5901:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5891:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5917:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5917:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5952:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5963:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5948:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:1"
																				},
																				"nativeSrc": "5948:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5972:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5927:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:1"
																		},
																		"nativeSrc": "5927:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5917:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5523:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5568:9:1",
														"nodeType": "YulTypedName",
														"src": "5568:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5579:7:1",
														"nodeType": "YulTypedName",
														"src": "5579:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5591:6:1",
														"nodeType": "YulTypedName",
														"src": "5591:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5599:6:1",
														"nodeType": "YulTypedName",
														"src": "5599:6:1",
														"type": ""
													}
												],
												"src": "5523:474:1"
											},
											{
												"body": {
													"nativeSrc": "6031:152:1",
													"nodeType": "YulBlock",
													"src": "6031:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6048:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6048:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6051:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6051:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:1"
																},
																"nativeSrc": "6041:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6041:88:1"
															},
															"nativeSrc": "6041:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6041:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6145:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6148:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6148:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6138:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:1"
																},
																"nativeSrc": "6138:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6138:15:1"
															},
															"nativeSrc": "6138:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6138:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6169:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6172:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6172:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:1"
																},
																"nativeSrc": "6162:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6162:15:1"
															},
															"nativeSrc": "6162:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6162:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6003:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6003:180:1"
											},
											{
												"body": {
													"nativeSrc": "6240:269:1",
													"nodeType": "YulBlock",
													"src": "6240:269:1",
													"statements": [
														{
															"nativeSrc": "6250:22:1",
															"nodeType": "YulAssignment",
															"src": "6250:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6264:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6264:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6270:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6270:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6260:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:1"
																},
																"nativeSrc": "6260:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6260:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:1"
																}
															]
														},
														{
															"nativeSrc": "6281:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6281:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6311:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6311:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6317:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:1"
																},
																"nativeSrc": "6307:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6307:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6285:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6285:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6358:51:1",
																"nodeType": "YulBlock",
																"src": "6358:51:1",
																"statements": [
																	{
																		"nativeSrc": "6372:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6372:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6386:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6386:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6394:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6394:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6382:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6382:3:1"
																			},
																			"nativeSrc": "6382:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6382:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6372:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6372:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6338:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6338:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6331:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:1"
																},
																"nativeSrc": "6331:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6331:26:1"
															},
															"nativeSrc": "6328:81:1",
															"nodeType": "YulIf",
															"src": "6328:81:1"
														},
														{
															"body": {
																"nativeSrc": "6461:42:1",
																"nodeType": "YulBlock",
																"src": "6461:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6475:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6475:16:1"
																			},
																			"nativeSrc": "6475:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6475:18:1"
																		},
																		"nativeSrc": "6475:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6475:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6425:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6425:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6448:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6456:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6445:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6445:2:1"
																		},
																		"nativeSrc": "6445:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6445:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6422:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6422:2:1"
																},
																"nativeSrc": "6422:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6422:38:1"
															},
															"nativeSrc": "6419:84:1",
															"nodeType": "YulIf",
															"src": "6419:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6189:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6224:4:1",
														"nodeType": "YulTypedName",
														"src": "6224:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6233:6:1",
														"nodeType": "YulTypedName",
														"src": "6233:6:1",
														"type": ""
													}
												],
												"src": "6189:320:1"
											},
											{
												"body": {
													"nativeSrc": "6621:58:1",
													"nodeType": "YulBlock",
													"src": "6621:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6643:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6643:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6651:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6651:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:1"
																		},
																		"nativeSrc": "6639:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6639:14:1"
																	},
																	{
																		"hexValue": "616d6f756e74206973203c3d2030",
																		"kind": "string",
																		"nativeSrc": "6655:16:1",
																		"nodeType": "YulLiteral",
																		"src": "6655:16:1",
																		"type": "",
																		"value": "amount is <= 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6632:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:1"
																},
																"nativeSrc": "6632:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6632:40:1"
															},
															"nativeSrc": "6632:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "6632:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4",
												"nativeSrc": "6515:164:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6613:6:1",
														"nodeType": "YulTypedName",
														"src": "6613:6:1",
														"type": ""
													}
												],
												"src": "6515:164:1"
											},
											{
												"body": {
													"nativeSrc": "6831:220:1",
													"nodeType": "YulBlock",
													"src": "6831:220:1",
													"statements": [
														{
															"nativeSrc": "6841:74:1",
															"nodeType": "YulAssignment",
															"src": "6841:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6907:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6907:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6912:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6912:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6848:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6848:58:1"
																},
																"nativeSrc": "6848:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6848:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6841:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6841:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7013:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7013:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4",
																	"nativeSrc": "6924:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6924:88:1"
																},
																"nativeSrc": "6924:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6924:93:1"
															},
															"nativeSrc": "6924:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6924:93:1"
														},
														{
															"nativeSrc": "7026:19:1",
															"nodeType": "YulAssignment",
															"src": "7026:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7037:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7037:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7042:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7033:3:1"
																},
																"nativeSrc": "7033:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7033:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7026:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6685:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6819:3:1",
														"nodeType": "YulTypedName",
														"src": "6819:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6827:3:1",
														"nodeType": "YulTypedName",
														"src": "6827:3:1",
														"type": ""
													}
												],
												"src": "6685:366:1"
											},
											{
												"body": {
													"nativeSrc": "7228:248:1",
													"nodeType": "YulBlock",
													"src": "7228:248:1",
													"statements": [
														{
															"nativeSrc": "7238:26:1",
															"nodeType": "YulAssignment",
															"src": "7238:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7250:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7250:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7261:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7246:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:1"
																},
																"nativeSrc": "7246:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7246:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7238:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7238:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7285:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7285:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7296:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7296:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7281:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7281:3:1"
																		},
																		"nativeSrc": "7281:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7281:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7304:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7304:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7310:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7300:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7300:3:1"
																		},
																		"nativeSrc": "7300:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7300:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:1"
																},
																"nativeSrc": "7274:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7274:47:1"
															},
															"nativeSrc": "7274:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7274:47:1"
														},
														{
															"nativeSrc": "7330:139:1",
															"nodeType": "YulAssignment",
															"src": "7330:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7464:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7464:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7338:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7338:124:1"
																},
																"nativeSrc": "7338:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7338:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7330:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7330:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7057:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7208:9:1",
														"nodeType": "YulTypedName",
														"src": "7208:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7223:4:1",
														"nodeType": "YulTypedName",
														"src": "7223:4:1",
														"type": ""
													}
												],
												"src": "7057:419:1"
											},
											{
												"body": {
													"nativeSrc": "7588:62:1",
													"nodeType": "YulBlock",
													"src": "7588:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7610:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7610:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7606:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7606:3:1"
																		},
																		"nativeSrc": "7606:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7606:14:1"
																	},
																	{
																		"hexValue": "616d6f756e74206973203e207374616b6564",
																		"kind": "string",
																		"nativeSrc": "7622:20:1",
																		"nodeType": "YulLiteral",
																		"src": "7622:20:1",
																		"type": "",
																		"value": "amount is > staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7599:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7599:6:1"
																},
																"nativeSrc": "7599:44:1",
																"nodeType": "YulFunctionCall",
																"src": "7599:44:1"
															},
															"nativeSrc": "7599:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "7599:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8",
												"nativeSrc": "7482:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7580:6:1",
														"nodeType": "YulTypedName",
														"src": "7580:6:1",
														"type": ""
													}
												],
												"src": "7482:168:1"
											},
											{
												"body": {
													"nativeSrc": "7802:220:1",
													"nodeType": "YulBlock",
													"src": "7802:220:1",
													"statements": [
														{
															"nativeSrc": "7812:74:1",
															"nodeType": "YulAssignment",
															"src": "7812:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7878:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7878:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7883:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7883:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7819:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7819:58:1"
																},
																"nativeSrc": "7819:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7819:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7812:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7812:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7984:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7984:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8",
																	"nativeSrc": "7895:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7895:88:1"
																},
																"nativeSrc": "7895:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7895:93:1"
															},
															"nativeSrc": "7895:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7895:93:1"
														},
														{
															"nativeSrc": "7997:19:1",
															"nodeType": "YulAssignment",
															"src": "7997:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8008:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8008:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8013:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8004:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8004:3:1"
																},
																"nativeSrc": "8004:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8004:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7997:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7997:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7656:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7790:3:1",
														"nodeType": "YulTypedName",
														"src": "7790:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7798:3:1",
														"nodeType": "YulTypedName",
														"src": "7798:3:1",
														"type": ""
													}
												],
												"src": "7656:366:1"
											},
											{
												"body": {
													"nativeSrc": "8199:248:1",
													"nodeType": "YulBlock",
													"src": "8199:248:1",
													"statements": [
														{
															"nativeSrc": "8209:26:1",
															"nodeType": "YulAssignment",
															"src": "8209:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8221:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8221:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8232:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8217:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:1"
																},
																"nativeSrc": "8217:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8217:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8209:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8209:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8256:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8256:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8267:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8267:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8252:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8252:3:1"
																		},
																		"nativeSrc": "8252:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8252:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8275:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8275:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8281:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8271:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8271:3:1"
																		},
																		"nativeSrc": "8271:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8271:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8245:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8245:6:1"
																},
																"nativeSrc": "8245:47:1",
																"nodeType": "YulFunctionCall",
																"src": "8245:47:1"
															},
															"nativeSrc": "8245:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "8245:47:1"
														},
														{
															"nativeSrc": "8301:139:1",
															"nodeType": "YulAssignment",
															"src": "8301:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8435:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8435:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8309:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "8309:124:1"
																},
																"nativeSrc": "8309:131:1",
																"nodeType": "YulFunctionCall",
																"src": "8309:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8301:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8301:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8028:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8179:9:1",
														"nodeType": "YulTypedName",
														"src": "8179:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8194:4:1",
														"nodeType": "YulTypedName",
														"src": "8194:4:1",
														"type": ""
													}
												],
												"src": "8028:419:1"
											},
											{
												"body": {
													"nativeSrc": "8481:152:1",
													"nodeType": "YulBlock",
													"src": "8481:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8498:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8498:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8501:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8501:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8491:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8491:6:1"
																},
																"nativeSrc": "8491:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8491:88:1"
															},
															"nativeSrc": "8491:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8491:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8595:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8595:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8598:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8598:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8588:6:1"
																},
																"nativeSrc": "8588:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8588:15:1"
															},
															"nativeSrc": "8588:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8588:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8619:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8619:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8622:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8622:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8612:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8612:6:1"
																},
																"nativeSrc": "8612:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8612:15:1"
															},
															"nativeSrc": "8612:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8612:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8453:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8453:180:1"
											},
											{
												"body": {
													"nativeSrc": "8684:149:1",
													"nodeType": "YulBlock",
													"src": "8684:149:1",
													"statements": [
														{
															"nativeSrc": "8694:25:1",
															"nodeType": "YulAssignment",
															"src": "8694:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8717:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8717:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8699:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8699:17:1"
																},
																"nativeSrc": "8699:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8699:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8694:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8694:1:1"
																}
															]
														},
														{
															"nativeSrc": "8728:25:1",
															"nodeType": "YulAssignment",
															"src": "8728:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8751:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8751:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8733:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8733:17:1"
																},
																"nativeSrc": "8733:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8733:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8728:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8728:1:1"
																}
															]
														},
														{
															"nativeSrc": "8762:17:1",
															"nodeType": "YulAssignment",
															"src": "8762:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8774:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8774:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8777:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8777:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8770:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8770:3:1"
																},
																"nativeSrc": "8770:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8770:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8762:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8762:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8804:22:1",
																"nodeType": "YulBlock",
																"src": "8804:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8806:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8806:16:1"
																			},
																			"nativeSrc": "8806:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8806:18:1"
																		},
																		"nativeSrc": "8806:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8806:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8795:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8795:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8801:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8801:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8792:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8792:2:1"
																},
																"nativeSrc": "8792:11:1",
																"nodeType": "YulFunctionCall",
																"src": "8792:11:1"
															},
															"nativeSrc": "8789:37:1",
															"nodeType": "YulIf",
															"src": "8789:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8639:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8670:1:1",
														"nodeType": "YulTypedName",
														"src": "8670:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8673:1:1",
														"nodeType": "YulTypedName",
														"src": "8673:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8679:4:1",
														"nodeType": "YulTypedName",
														"src": "8679:4:1",
														"type": ""
													}
												],
												"src": "8639:194:1"
											},
											{
												"body": {
													"nativeSrc": "8945:58:1",
													"nodeType": "YulBlock",
													"src": "8945:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8967:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8967:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8975:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8975:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8963:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8963:3:1"
																		},
																		"nativeSrc": "8963:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:14:1"
																	},
																	{
																		"hexValue": "7374616b6564206973203c3d2030",
																		"kind": "string",
																		"nativeSrc": "8979:16:1",
																		"nodeType": "YulLiteral",
																		"src": "8979:16:1",
																		"type": "",
																		"value": "staked is <= 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8956:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8956:6:1"
																},
																"nativeSrc": "8956:40:1",
																"nodeType": "YulFunctionCall",
																"src": "8956:40:1"
															},
															"nativeSrc": "8956:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "8956:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7",
												"nativeSrc": "8839:164:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8937:6:1",
														"nodeType": "YulTypedName",
														"src": "8937:6:1",
														"type": ""
													}
												],
												"src": "8839:164:1"
											},
											{
												"body": {
													"nativeSrc": "9155:220:1",
													"nodeType": "YulBlock",
													"src": "9155:220:1",
													"statements": [
														{
															"nativeSrc": "9165:74:1",
															"nodeType": "YulAssignment",
															"src": "9165:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9231:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9231:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9236:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9172:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9172:58:1"
																},
																"nativeSrc": "9172:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9172:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9165:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9165:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9337:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9337:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7",
																	"nativeSrc": "9248:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9248:88:1"
																},
																"nativeSrc": "9248:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9248:93:1"
															},
															"nativeSrc": "9248:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9248:93:1"
														},
														{
															"nativeSrc": "9350:19:1",
															"nodeType": "YulAssignment",
															"src": "9350:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9361:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9361:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9366:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9366:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9357:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9357:3:1"
																},
																"nativeSrc": "9357:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9357:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9350:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9350:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9009:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9143:3:1",
														"nodeType": "YulTypedName",
														"src": "9143:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9151:3:1",
														"nodeType": "YulTypedName",
														"src": "9151:3:1",
														"type": ""
													}
												],
												"src": "9009:366:1"
											},
											{
												"body": {
													"nativeSrc": "9552:248:1",
													"nodeType": "YulBlock",
													"src": "9552:248:1",
													"statements": [
														{
															"nativeSrc": "9562:26:1",
															"nodeType": "YulAssignment",
															"src": "9562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9574:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9570:3:1"
																},
																"nativeSrc": "9570:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9562:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9609:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9620:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9620:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:1"
																		},
																		"nativeSrc": "9605:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9605:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9628:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9628:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9634:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9624:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:1"
																		},
																		"nativeSrc": "9624:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9624:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:1"
																},
																"nativeSrc": "9598:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9598:47:1"
															},
															"nativeSrc": "9598:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9598:47:1"
														},
														{
															"nativeSrc": "9654:139:1",
															"nodeType": "YulAssignment",
															"src": "9654:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9788:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9788:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9662:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9662:124:1"
																},
																"nativeSrc": "9662:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9662:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9654:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9381:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9532:9:1",
														"nodeType": "YulTypedName",
														"src": "9532:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9547:4:1",
														"nodeType": "YulTypedName",
														"src": "9547:4:1",
														"type": ""
													}
												],
												"src": "9381:419:1"
											},
											{
												"body": {
													"nativeSrc": "9854:362:1",
													"nodeType": "YulBlock",
													"src": "9854:362:1",
													"statements": [
														{
															"nativeSrc": "9864:25:1",
															"nodeType": "YulAssignment",
															"src": "9864:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9887:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9887:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9869:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9869:17:1"
																},
																"nativeSrc": "9869:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9869:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9864:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9864:1:1"
																}
															]
														},
														{
															"nativeSrc": "9898:25:1",
															"nodeType": "YulAssignment",
															"src": "9898:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9921:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9921:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9903:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9903:17:1"
																},
																"nativeSrc": "9903:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9903:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9898:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9898:1:1"
																}
															]
														},
														{
															"nativeSrc": "9932:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9932:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9955:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9955:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9958:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9958:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9951:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9951:3:1"
																},
																"nativeSrc": "9951:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9951:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9936:11:1",
																	"nodeType": "YulTypedName",
																	"src": "9936:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9969:41:1",
															"nodeType": "YulAssignment",
															"src": "9969:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9998:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "9998:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9980:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9980:17:1"
																},
																"nativeSrc": "9980:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9980:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9969:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9969:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10187:22:1",
																"nodeType": "YulBlock",
																"src": "10187:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10189:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10189:16:1"
																			},
																			"nativeSrc": "10189:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10189:18:1"
																		},
																		"nativeSrc": "10189:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10189:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10120:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "10120:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10113:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "10113:6:1"
																				},
																				"nativeSrc": "10113:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10113:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10143:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "10143:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10150:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "10150:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10159:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "10159:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10146:3:1"
																						},
																						"nativeSrc": "10146:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10146:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10140:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10140:2:1"
																				},
																				"nativeSrc": "10140:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10140:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10093:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10093:2:1"
																		},
																		"nativeSrc": "10093:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10073:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10073:6:1"
																},
																"nativeSrc": "10073:113:1",
																"nodeType": "YulFunctionCall",
																"src": "10073:113:1"
															},
															"nativeSrc": "10070:139:1",
															"nodeType": "YulIf",
															"src": "10070:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9806:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9837:1:1",
														"nodeType": "YulTypedName",
														"src": "9837:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9840:1:1",
														"nodeType": "YulTypedName",
														"src": "9840:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9846:7:1",
														"nodeType": "YulTypedName",
														"src": "9846:7:1",
														"type": ""
													}
												],
												"src": "9806:410:1"
											},
											{
												"body": {
													"nativeSrc": "10250:152:1",
													"nodeType": "YulBlock",
													"src": "10250:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10267:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10267:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10270:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10270:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10260:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10260:6:1"
																},
																"nativeSrc": "10260:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10260:88:1"
															},
															"nativeSrc": "10260:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10260:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10364:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10364:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10367:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10367:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10357:6:1"
																},
																"nativeSrc": "10357:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10357:15:1"
															},
															"nativeSrc": "10357:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10357:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10388:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10388:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10391:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:1"
																},
																"nativeSrc": "10381:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10381:15:1"
															},
															"nativeSrc": "10381:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10381:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10222:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10222:180:1"
											},
											{
												"body": {
													"nativeSrc": "10450:143:1",
													"nodeType": "YulBlock",
													"src": "10450:143:1",
													"statements": [
														{
															"nativeSrc": "10460:25:1",
															"nodeType": "YulAssignment",
															"src": "10460:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10483:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10483:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10465:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10465:17:1"
																},
																"nativeSrc": "10465:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10465:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10460:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10460:1:1"
																}
															]
														},
														{
															"nativeSrc": "10494:25:1",
															"nodeType": "YulAssignment",
															"src": "10494:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10517:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10517:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10499:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10499:17:1"
																},
																"nativeSrc": "10499:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10499:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10494:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10494:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10541:22:1",
																"nodeType": "YulBlock",
																"src": "10541:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10543:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10543:16:1"
																			},
																			"nativeSrc": "10543:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10543:18:1"
																		},
																		"nativeSrc": "10543:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10543:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10538:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10538:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10531:6:1"
																},
																"nativeSrc": "10531:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10531:9:1"
															},
															"nativeSrc": "10528:35:1",
															"nodeType": "YulIf",
															"src": "10528:35:1"
														},
														{
															"nativeSrc": "10573:14:1",
															"nodeType": "YulAssignment",
															"src": "10573:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10582:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10582:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10585:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10585:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10578:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10578:3:1"
																},
																"nativeSrc": "10578:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10578:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10573:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10573:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10408:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10439:1:1",
														"nodeType": "YulTypedName",
														"src": "10439:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10442:1:1",
														"nodeType": "YulTypedName",
														"src": "10442:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10448:1:1",
														"nodeType": "YulTypedName",
														"src": "10448:1:1",
														"type": ""
													}
												],
												"src": "10408:185:1"
											},
											{
												"body": {
													"nativeSrc": "10705:64:1",
													"nodeType": "YulBlock",
													"src": "10705:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10727:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10727:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10735:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10735:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10723:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:1"
																		},
																		"nativeSrc": "10723:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10723:14:1"
																	},
																	{
																		"hexValue": "62616c616e6365206973203c3d20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10739:22:1",
																		"nodeType": "YulLiteral",
																		"src": "10739:22:1",
																		"type": "",
																		"value": "balance is <= amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10716:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10716:6:1"
																},
																"nativeSrc": "10716:46:1",
																"nodeType": "YulFunctionCall",
																"src": "10716:46:1"
															},
															"nativeSrc": "10716:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "10716:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8",
												"nativeSrc": "10599:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10697:6:1",
														"nodeType": "YulTypedName",
														"src": "10697:6:1",
														"type": ""
													}
												],
												"src": "10599:170:1"
											},
											{
												"body": {
													"nativeSrc": "10921:220:1",
													"nodeType": "YulBlock",
													"src": "10921:220:1",
													"statements": [
														{
															"nativeSrc": "10931:74:1",
															"nodeType": "YulAssignment",
															"src": "10931:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10997:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10997:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11002:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11002:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10938:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "10938:58:1"
																},
																"nativeSrc": "10938:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10938:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10931:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10931:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11103:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11103:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8",
																	"nativeSrc": "11014:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "11014:88:1"
																},
																"nativeSrc": "11014:93:1",
																"nodeType": "YulFunctionCall",
																"src": "11014:93:1"
															},
															"nativeSrc": "11014:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "11014:93:1"
														},
														{
															"nativeSrc": "11116:19:1",
															"nodeType": "YulAssignment",
															"src": "11116:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11127:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11127:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11123:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11123:3:1"
																},
																"nativeSrc": "11123:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11123:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11116:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11116:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10775:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10909:3:1",
														"nodeType": "YulTypedName",
														"src": "10909:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10917:3:1",
														"nodeType": "YulTypedName",
														"src": "10917:3:1",
														"type": ""
													}
												],
												"src": "10775:366:1"
											},
											{
												"body": {
													"nativeSrc": "11318:248:1",
													"nodeType": "YulBlock",
													"src": "11318:248:1",
													"statements": [
														{
															"nativeSrc": "11328:26:1",
															"nodeType": "YulAssignment",
															"src": "11328:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11340:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11340:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11351:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11336:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11336:3:1"
																},
																"nativeSrc": "11336:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11336:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11328:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11328:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11375:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11375:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11386:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11386:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11371:3:1"
																		},
																		"nativeSrc": "11371:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11371:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11394:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11394:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11400:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11400:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11390:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11390:3:1"
																		},
																		"nativeSrc": "11390:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11390:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11364:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11364:6:1"
																},
																"nativeSrc": "11364:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11364:47:1"
															},
															"nativeSrc": "11364:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11364:47:1"
														},
														{
															"nativeSrc": "11420:139:1",
															"nodeType": "YulAssignment",
															"src": "11420:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11554:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11554:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11428:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "11428:124:1"
																},
																"nativeSrc": "11428:131:1",
																"nodeType": "YulFunctionCall",
																"src": "11428:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11420:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11420:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11147:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11298:9:1",
														"nodeType": "YulTypedName",
														"src": "11298:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11313:4:1",
														"nodeType": "YulTypedName",
														"src": "11313:4:1",
														"type": ""
													}
												],
												"src": "11147:419:1"
											},
											{
												"body": {
													"nativeSrc": "11616:147:1",
													"nodeType": "YulBlock",
													"src": "11616:147:1",
													"statements": [
														{
															"nativeSrc": "11626:25:1",
															"nodeType": "YulAssignment",
															"src": "11626:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11649:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11649:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11631:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11631:17:1"
																},
																"nativeSrc": "11631:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11631:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11626:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11626:1:1"
																}
															]
														},
														{
															"nativeSrc": "11660:25:1",
															"nodeType": "YulAssignment",
															"src": "11660:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11683:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11683:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11665:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11665:17:1"
																},
																"nativeSrc": "11665:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11665:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11660:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11660:1:1"
																}
															]
														},
														{
															"nativeSrc": "11694:16:1",
															"nodeType": "YulAssignment",
															"src": "11694:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11705:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11705:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11708:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11708:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11701:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11701:3:1"
																},
																"nativeSrc": "11701:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11701:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11694:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11694:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11734:22:1",
																"nodeType": "YulBlock",
																"src": "11734:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11736:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11736:16:1"
																			},
																			"nativeSrc": "11736:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11736:18:1"
																		},
																		"nativeSrc": "11736:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11736:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11726:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11726:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11729:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11729:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11723:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11723:2:1"
																},
																"nativeSrc": "11723:10:1",
																"nodeType": "YulFunctionCall",
																"src": "11723:10:1"
															},
															"nativeSrc": "11720:36:1",
															"nodeType": "YulIf",
															"src": "11720:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11572:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11603:1:1",
														"nodeType": "YulTypedName",
														"src": "11603:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11606:1:1",
														"nodeType": "YulTypedName",
														"src": "11606:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11612:3:1",
														"nodeType": "YulTypedName",
														"src": "11612:3:1",
														"type": ""
													}
												],
												"src": "11572:191:1"
											},
											{
												"body": {
													"nativeSrc": "11834:53:1",
													"nodeType": "YulBlock",
													"src": "11834:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11851:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11851:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11874:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11874:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11856:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "11856:17:1"
																		},
																		"nativeSrc": "11856:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11856:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11844:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11844:6:1"
																},
																"nativeSrc": "11844:37:1",
																"nodeType": "YulFunctionCall",
																"src": "11844:37:1"
															},
															"nativeSrc": "11844:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "11844:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11769:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11822:5:1",
														"nodeType": "YulTypedName",
														"src": "11822:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11829:3:1",
														"nodeType": "YulTypedName",
														"src": "11829:3:1",
														"type": ""
													}
												],
												"src": "11769:118:1"
											},
											{
												"body": {
													"nativeSrc": "12047:288:1",
													"nodeType": "YulBlock",
													"src": "12047:288:1",
													"statements": [
														{
															"nativeSrc": "12057:26:1",
															"nodeType": "YulAssignment",
															"src": "12057:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12069:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12069:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12080:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12080:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12065:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12065:3:1"
																},
																"nativeSrc": "12065:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12065:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12057:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12057:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12137:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12137:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12150:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12150:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12161:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12161:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12146:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12146:3:1"
																		},
																		"nativeSrc": "12146:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12146:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12093:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12093:43:1"
																},
																"nativeSrc": "12093:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12093:71:1"
															},
															"nativeSrc": "12093:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12093:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12218:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12218:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12231:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12231:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12242:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12242:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12227:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12227:3:1"
																		},
																		"nativeSrc": "12227:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12227:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12174:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12174:43:1"
																},
																"nativeSrc": "12174:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12174:72:1"
															},
															"nativeSrc": "12174:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12174:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12300:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12313:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12313:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12324:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12324:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12309:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12309:3:1"
																		},
																		"nativeSrc": "12309:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12309:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12256:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12256:43:1"
																},
																"nativeSrc": "12256:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12256:72:1"
															},
															"nativeSrc": "12256:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12256:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11893:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12003:9:1",
														"nodeType": "YulTypedName",
														"src": "12003:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12015:6:1",
														"nodeType": "YulTypedName",
														"src": "12015:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12023:6:1",
														"nodeType": "YulTypedName",
														"src": "12023:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12031:6:1",
														"nodeType": "YulTypedName",
														"src": "12031:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12042:4:1",
														"nodeType": "YulTypedName",
														"src": "12042:4:1",
														"type": ""
													}
												],
												"src": "11893:442:1"
											},
											{
												"body": {
													"nativeSrc": "12439:124:1",
													"nodeType": "YulBlock",
													"src": "12439:124:1",
													"statements": [
														{
															"nativeSrc": "12449:26:1",
															"nodeType": "YulAssignment",
															"src": "12449:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12461:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12461:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12472:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12472:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12457:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12457:3:1"
																},
																"nativeSrc": "12457:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12457:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12449:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12449:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12529:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12529:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12542:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12542:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12553:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12553:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12538:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12538:3:1"
																		},
																		"nativeSrc": "12538:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12538:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12485:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12485:43:1"
																},
																"nativeSrc": "12485:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12485:71:1"
															},
															"nativeSrc": "12485:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12485:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12341:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12411:9:1",
														"nodeType": "YulTypedName",
														"src": "12411:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12423:6:1",
														"nodeType": "YulTypedName",
														"src": "12423:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12434:4:1",
														"nodeType": "YulTypedName",
														"src": "12434:4:1",
														"type": ""
													}
												],
												"src": "12341:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount is <= 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount is > staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7(memPtr) {\n\n        mstore(add(memPtr, 0), \"staked is <= 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"balance is <= amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80634e71d92d1161008a57806398807d841161006457806398807d84146101ff578063a694fc3a1461022f578063a9059cbb1461024b578063dd62ed3e1461027b576100cd565b80634e71d92d146101a757806370a08231146101b157806395d89b41146101e1576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d5780632e17de781461016d578063313ce56714610189575b5f80fd5b6100d96102ab565b6040516100e69190610fd5565b60405180910390f35b61010960048036038101906101049190611086565b61033b565b60405161011691906110de565b60405180910390f35b61012761035d565b6040516101349190611106565b60405180910390f35b6101576004803603810190610152919061111f565b610366565b60405161016491906110de565b60405180910390f35b6101876004803603810190610182919061116f565b610394565b005b6101916104bf565b60405161019e91906111b5565b60405180910390f35b6101af6104c7565b005b6101cb60048036038101906101c691906111ce565b61063d565b6040516101d89190611106565b60405180910390f35b6101e9610682565b6040516101f69190610fd5565b60405180910390f35b610219600480360381019061021491906111ce565b610712565b6040516102269190611106565b60405180910390f35b6102496004803603810190610244919061116f565b610727565b005b61026560048036038101906102609190611086565b6108a5565b60405161027291906110de565b60405180910390f35b610295600480360381019061029091906111f9565b6108c7565b6040516102a29190611106565b60405180910390f35b6060600380546102ba90611264565b80601f01602080910402602001604051908101604052809291908181526020018280546102e690611264565b80156103315780601f1061030857610100808354040283529160200191610331565b820191905f5260205f20905b81548152906001019060200180831161031457829003601f168201915b5050505050905090565b5f80610345610949565b9050610352818585610950565b600191505092915050565b5f600254905090565b5f80610370610949565b905061037d858285610962565b6103888585856109f4565b60019150509392505050565b5f81116103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd906112de565b60405180910390fd5b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d90611346565b60405180910390fd5b61045e6104c7565b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104aa9190611391565b925050819055506104bc3033836109f4565b50565b5f6012905090565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d9061140e565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426105909190611391565b90505f6301e143208260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105e1919061142c565b6105eb919061149a565b90506105f73382610ae4565b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461069190611264565b80601f01602080910402602001604051908101604052809291908181526020018280546106bd90611264565b80156107085780601f106106df57610100808354040283529160200191610708565b820191905f5260205f20905b8154815290600101906020018083116106eb57829003601f168201915b5050505050905090565b6005602052805f5260405f205f915090505481565b5f8111610769576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610760906112de565b60405180910390fd5b806107733361063d565b10156107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab90611514565b60405180910390fd5b6107bf3330836109f4565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561080d5761080c6104c7565b5b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461089b9190611532565b9250508190555050565b5f806108af610949565b90506108bc8185856109f4565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61095d8383836001610b63565b505050565b5f61096d84846108c7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109ee57818110156109df578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109d693929190611574565b60405180910390fd5b6109ed84848484035f610b63565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a64575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a5b91906115a9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ad4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610acb91906115a9565b60405180910390fd5b610adf838383610d32565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b54575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4b91906115a9565b60405180910390fd5b610b5f5f8383610d32565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bd3575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bca91906115a9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c43575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c3a91906115a9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d2c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d239190611106565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d82578060025f828254610d769190611532565b92505081905550610e50565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e0b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e0293929190611574565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e97578060025f8282540392505081905550610ee1565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3e9190611106565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f82578082015181840152602081019050610f67565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fa782610f4b565b610fb18185610f55565b9350610fc1818560208601610f65565b610fca81610f8d565b840191505092915050565b5f6020820190508181035f830152610fed8184610f9d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61102282610ff9565b9050919050565b61103281611018565b811461103c575f80fd5b50565b5f8135905061104d81611029565b92915050565b5f819050919050565b61106581611053565b811461106f575f80fd5b50565b5f813590506110808161105c565b92915050565b5f806040838503121561109c5761109b610ff5565b5b5f6110a98582860161103f565b92505060206110ba85828601611072565b9150509250929050565b5f8115159050919050565b6110d8816110c4565b82525050565b5f6020820190506110f15f8301846110cf565b92915050565b61110081611053565b82525050565b5f6020820190506111195f8301846110f7565b92915050565b5f805f6060848603121561113657611135610ff5565b5b5f6111438682870161103f565b93505060206111548682870161103f565b925050604061116586828701611072565b9150509250925092565b5f6020828403121561118457611183610ff5565b5b5f61119184828501611072565b91505092915050565b5f60ff82169050919050565b6111af8161119a565b82525050565b5f6020820190506111c85f8301846111a6565b92915050565b5f602082840312156111e3576111e2610ff5565b5b5f6111f08482850161103f565b91505092915050565b5f806040838503121561120f5761120e610ff5565b5b5f61121c8582860161103f565b925050602061122d8582860161103f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061127b57607f821691505b60208210810361128e5761128d611237565b5b50919050565b7f616d6f756e74206973203c3d20300000000000000000000000000000000000005f82015250565b5f6112c8600e83610f55565b91506112d382611294565b602082019050919050565b5f6020820190508181035f8301526112f5816112bc565b9050919050565b7f616d6f756e74206973203e207374616b656400000000000000000000000000005f82015250565b5f611330601283610f55565b915061133b826112fc565b602082019050919050565b5f6020820190508181035f83015261135d81611324565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61139b82611053565b91506113a683611053565b92508282039050818111156113be576113bd611364565b5b92915050565b7f7374616b6564206973203c3d20300000000000000000000000000000000000005f82015250565b5f6113f8600e83610f55565b9150611403826113c4565b602082019050919050565b5f6020820190508181035f830152611425816113ec565b9050919050565b5f61143682611053565b915061144183611053565b925082820261144f81611053565b9150828204841483151761146657611465611364565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114a482611053565b91506114af83611053565b9250826114bf576114be61146d565b5b828204905092915050565b7f62616c616e6365206973203c3d20616d6f756e740000000000000000000000005f82015250565b5f6114fe601483610f55565b9150611509826114ca565b602082019050919050565b5f6020820190508181035f83015261152b816114f2565b9050919050565b5f61153c82611053565b915061154783611053565b925082820190508082111561155f5761155e611364565b5b92915050565b61156e81611018565b82525050565b5f6060820190506115875f830186611565565b61159460208301856110f7565b6115a160408301846110f7565b949350505050565b5f6020820190506115bc5f830184611565565b9291505056fea2646970667358221220a8ccb8afe482a8e95309cb1b125d0d3e6d02e9a58a5e616b7a4a3677c5e132f064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x98807D84 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x98807D84 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x27B JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2BA SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E6 SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x331 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x308 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x331 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x314 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x345 PUSH2 0x949 JUMP JUMPDEST SWAP1 POP PUSH2 0x352 DUP2 DUP6 DUP6 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x370 PUSH2 0x949 JUMP JUMPDEST SWAP1 POP PUSH2 0x37D DUP6 DUP3 DUP6 PUSH2 0x962 JUMP JUMPDEST PUSH2 0x388 DUP6 DUP6 DUP6 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CD SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44D SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45E PUSH2 0x4C7 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4BC ADDRESS CALLER DUP4 PUSH2 0x9F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E14320 DUP3 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x142C JUMP JUMPDEST PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST SWAP1 POP PUSH2 0x5F7 CALLER DUP3 PUSH2 0xAE4 JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x691 SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BD SWAP1 PUSH2 0x1264 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x773 CALLER PUSH2 0x63D JUMP JUMPDEST LT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BF CALLER ADDRESS DUP4 PUSH2 0x9F4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x4C7 JUMP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8AF PUSH2 0x949 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC DUP2 DUP6 DUP6 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x95D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96D DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9EE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9DF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9ED DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB63 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADF DUP4 DUP4 DUP4 PUSH2 0xD32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5F PUSH0 DUP4 DUP4 PUSH2 0xD32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCA SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC43 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD2C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD82 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE50 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE97 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF82 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF67 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA7 DUP3 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0xFB1 DUP2 DUP6 PUSH2 0xF55 JUMP JUMPDEST SWAP4 POP PUSH2 0xFC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xFCA DUP2 PUSH2 0xF8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFED DUP2 DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1022 DUP3 PUSH2 0xFF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1032 DUP2 PUSH2 0x1018 JUMP JUMPDEST DUP2 EQ PUSH2 0x103C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x104D DUP2 PUSH2 0x1029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x1053 JUMP JUMPDEST DUP2 EQ PUSH2 0x106F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1080 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109B PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A9 DUP6 DUP3 DUP7 ADD PUSH2 0x103F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10BA DUP6 DUP3 DUP7 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D8 DUP2 PUSH2 0x10C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x10CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1100 DUP2 PUSH2 0x1053 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH0 DUP4 ADD DUP5 PUSH2 0x10F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1143 DUP7 DUP3 DUP8 ADD PUSH2 0x103F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1154 DUP7 DUP3 DUP8 ADD PUSH2 0x103F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1165 DUP7 DUP3 DUP8 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x1183 PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1191 DUP5 DUP3 DUP6 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x119A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x11A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E2 PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F0 DUP5 DUP3 DUP6 ADD PUSH2 0x103F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0xFF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121C DUP6 DUP3 DUP7 ADD PUSH2 0x103F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x122D DUP6 DUP3 DUP7 ADD PUSH2 0x103F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x127B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x1237 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206973203C3D2030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C8 PUSH1 0xE DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D3 DUP3 PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F5 DUP2 PUSH2 0x12BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206973203E207374616B65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1330 PUSH1 0x12 DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x133B DUP3 PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x135D DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x139B DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A6 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x1364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374616B6564206973203C3D2030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13F8 PUSH1 0xE DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1403 DUP3 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1425 DUP2 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1436 DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x1441 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x144F DUP2 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1466 JUMPI PUSH2 0x1465 PUSH2 0x1364 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14A4 DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AF DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62616C616E6365206973203C3D20616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14FE PUSH1 0x14 DUP4 PUSH2 0xF55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1509 DUP3 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152B DUP2 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x153C DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP PUSH2 0x1547 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x1018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1587 PUSH0 DUP4 ADD DUP7 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x1594 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10F7 JUMP JUMPDEST PUSH2 0x15A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP5 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xCC 0xB8 0xAF 0xE4 DUP3 0xA8 0xE9 MSTORE8 MULMOD 0xCB SHL SLT TSTORE 0xD RETURNDATACOPY PUSH14 0x2E9A58A5E616B7A4A3677C5E132 CREATE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "22134:2659:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12966:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15185:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14036:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15931:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23400:623;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13894:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24029:762;;;:::i;:::-;;14191:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13168:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22172:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22526:868;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14502:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14738:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12966:89;13011:13;13043:5;13036:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12966:89;:::o;15185:186::-;15258:4;15274:13;15290:12;:10;:12::i;:::-;15274:28;;15312:31;15321:5;15328:7;15337:5;15312:8;:31::i;:::-;15360:4;15353:11;;;15185:186;;;;:::o;14036:97::-;14088:7;14114:12;;14107:19;;14036:97;:::o;15931:244::-;16018:4;16034:15;16052:12;:10;:12::i;:::-;16034:30;;16074:37;16090:4;16096:7;16105:5;16074:15;:37::i;:::-;16121:26;16131:4;16137:2;16141:5;16121:9;:26::i;:::-;16164:4;16157:11;;;15931:244;;;;;:::o;23400:623::-;23507:1;23498:6;:10;23490:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;23631:6;23609;:18;23616:10;23609:18;;;;;;;;;;;;;;;;:28;;23601:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;23730:7;:5;:7::i;:::-;23835:6;23813;:18;23820:10;23813:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;23912:44;23930:4;23937:10;23949:6;23912:9;:44::i;:::-;23400:623;:::o;13894:82::-;13943:5;13967:2;13960:9;;13894:82;:::o;24029:762::-;24130:1;24109:6;:18;24116:10;24109:18;;;;;;;;;;;;;;;;:22;24101:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;24213:21;24255:12;:24;24268:10;24255:24;;;;;;;;;;;;;;;;24237:15;:42;;;;:::i;:::-;24213:66;;24358:15;24413:7;24397:13;24376:6;:18;24383:10;24376:18;;;;;;;;;;;;;;;;:34;;;;:::i;:::-;:44;;;;:::i;:::-;24358:62;;24556:26;24562:10;24574:7;24556:5;:26::i;:::-;24690:15;24663:12;:24;24676:10;24663:24;;;;;;;;;;;;;;;:42;;;;24053:738;;24029:762::o;14191:116::-;14256:7;14282:9;:18;14292:7;14282:18;;;;;;;;;;;;;;;;14275:25;;14191:116;;;:::o;13168:93::-;13215:13;13247:7;13240:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13168:93;:::o;22172:41::-;;;;;;;;;;;;;;;;;:::o;22526:868::-;22630:1;22621:6;:10;22613:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;22756:6;22731:21;22741:10;22731:9;:21::i;:::-;:31;;22723:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;22860:44;22870:10;22890:4;22897:6;22860:9;:44::i;:::-;23024:1;23003:6;:18;23010:10;23003:18;;;;;;;;;;;;;;;;:22;22999:175;;;23041:7;:5;:7::i;:::-;22999:175;23210:15;23183:12;:24;23196:10;23183:24;;;;;;;;;;;;;;;:42;;;;23319:6;23297;:18;23304:10;23297:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;22526:868;:::o;14502:178::-;14571:4;14587:13;14603:12;:10;:12::i;:::-;14587:28;;14625:27;14635:5;14642:2;14646:5;14625:9;:27::i;:::-;14669:4;14662:11;;;14502:178;;;;:::o;14738:140::-;14818:7;14844:11;:18;14856:5;14844:18;;;;;;;;;;;;;;;:27;14863:7;14844:27;;;;;;;;;;;;;;;;14837:34;;14738:140;;;;:::o;7275:96::-;7328:7;7354:10;7347:17;;7275:96;:::o;19881:128::-;19965:37;19974:5;19981:7;19990:5;19997:4;19965:8;:37::i;:::-;19881:128;;;:::o;21555:477::-;21654:24;21681:25;21691:5;21698:7;21681:9;:25::i;:::-;21654:52;;21740:17;21720:16;:37;21716:310;;21796:5;21777:16;:24;21773:130;;;21855:7;21864:16;21882:5;21828:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21773:130;21944:57;21953:5;21960:7;21988:5;21969:16;:24;21995:5;21944:8;:57::i;:::-;21716:310;21644:388;21555:477;;;:::o;16548:300::-;16647:1;16631:18;;:4;:18;;;16627:86;;16699:1;16672:30;;;;;;;;;;;:::i;:::-;;;;;;;;16627:86;16740:1;16726:16;;:2;:16;;;16722:86;;16794:1;16765:32;;;;;;;;;;;:::i;:::-;;;;;;;;16722:86;16817:24;16825:4;16831:2;16835:5;16817:7;:24::i;:::-;16548:300;;;:::o;18613:208::-;18702:1;18683:21;;:7;:21;;;18679:91;;18756:1;18727:32;;;;;;;;;;;:::i;:::-;;;;;;;;18679:91;18779:35;18795:1;18799:7;18808:5;18779:7;:35::i;:::-;18613:208;;:::o;20841:432::-;20970:1;20953:19;;:5;:19;;;20949:89;;21024:1;20995:32;;;;;;;;;;;:::i;:::-;;;;;;;;20949:89;21070:1;21051:21;;:7;:21;;;21047:90;;21123:1;21095:31;;;;;;;;;;;:::i;:::-;;;;;;;;21047:90;21176:5;21146:11;:18;21158:5;21146:18;;;;;;;;;;;;;;;:27;21165:7;21146:27;;;;;;;;;;;;;;;:35;;;;21195:9;21191:76;;;21241:7;21225:31;;21234:5;21225:31;;;21250:5;21225:31;;;;;;:::i;:::-;;;;;;;;21191:76;20841:432;;;;:::o;17163:1107::-;17268:1;17252:18;;:4;:18;;;17248:540;;17404:5;17388:12;;:21;;;;;;;:::i;:::-;;;;;;;;17248:540;;;17440:19;17462:9;:15;17472:4;17462:15;;;;;;;;;;;;;;;;17440:37;;17509:5;17495:11;:19;17491:115;;;17566:4;17572:11;17585:5;17541:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17491:115;17758:5;17744:11;:19;17726:9;:15;17736:4;17726:15;;;;;;;;;;;;;;;:37;;;;17426:362;17248:540;17816:1;17802:16;;:2;:16;;;17798:425;;17981:5;17965:12;;:21;;;;;;;;;;;17798:425;;;18193:5;18176:9;:13;18186:2;18176:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17798:425;18253:2;18238:25;;18247:4;18238:25;;;18257:5;18238:25;;;;;;:::i;:::-;;;;;;;;17163:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:329::-;4482:6;4531:2;4519:9;4510:7;4506:23;4502:32;4499:119;;;4537:79;;:::i;:::-;4499:119;4657:1;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4628:117;4423:329;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:329::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:180::-;6051:77;6048:1;6041:88;6148:4;6145:1;6138:15;6172:4;6169:1;6162:15;6189:320;6233:6;6270:1;6264:4;6260:12;6250:22;;6317:1;6311:4;6307:12;6338:18;6328:81;;6394:4;6386:6;6382:17;6372:27;;6328:81;6456:2;6448:6;6445:14;6425:18;6422:38;6419:84;;6475:18;;:::i;:::-;6419:84;6240:269;6189:320;;;:::o;6515:164::-;6655:16;6651:1;6643:6;6639:14;6632:40;6515:164;:::o;6685:366::-;6827:3;6848:67;6912:2;6907:3;6848:67;:::i;:::-;6841:74;;6924:93;7013:3;6924:93;:::i;:::-;7042:2;7037:3;7033:12;7026:19;;6685:366;;;:::o;7057:419::-;7223:4;7261:2;7250:9;7246:18;7238:26;;7310:9;7304:4;7300:20;7296:1;7285:9;7281:17;7274:47;7338:131;7464:4;7338:131;:::i;:::-;7330:139;;7057:419;;;:::o;7482:168::-;7622:20;7618:1;7610:6;7606:14;7599:44;7482:168;:::o;7656:366::-;7798:3;7819:67;7883:2;7878:3;7819:67;:::i;:::-;7812:74;;7895:93;7984:3;7895:93;:::i;:::-;8013:2;8008:3;8004:12;7997:19;;7656:366;;;:::o;8028:419::-;8194:4;8232:2;8221:9;8217:18;8209:26;;8281:9;8275:4;8271:20;8267:1;8256:9;8252:17;8245:47;8309:131;8435:4;8309:131;:::i;:::-;8301:139;;8028:419;;;:::o;8453:180::-;8501:77;8498:1;8491:88;8598:4;8595:1;8588:15;8622:4;8619:1;8612:15;8639:194;8679:4;8699:20;8717:1;8699:20;:::i;:::-;8694:25;;8733:20;8751:1;8733:20;:::i;:::-;8728:25;;8777:1;8774;8770:9;8762:17;;8801:1;8795:4;8792:11;8789:37;;;8806:18;;:::i;:::-;8789:37;8639:194;;;;:::o;8839:164::-;8979:16;8975:1;8967:6;8963:14;8956:40;8839:164;:::o;9009:366::-;9151:3;9172:67;9236:2;9231:3;9172:67;:::i;:::-;9165:74;;9248:93;9337:3;9248:93;:::i;:::-;9366:2;9361:3;9357:12;9350:19;;9009:366;;;:::o;9381:419::-;9547:4;9585:2;9574:9;9570:18;9562:26;;9634:9;9628:4;9624:20;9620:1;9609:9;9605:17;9598:47;9662:131;9788:4;9662:131;:::i;:::-;9654:139;;9381:419;;;:::o;9806:410::-;9846:7;9869:20;9887:1;9869:20;:::i;:::-;9864:25;;9903:20;9921:1;9903:20;:::i;:::-;9898:25;;9958:1;9955;9951:9;9980:30;9998:11;9980:30;:::i;:::-;9969:41;;10159:1;10150:7;10146:15;10143:1;10140:22;10120:1;10113:9;10093:83;10070:139;;10189:18;;:::i;:::-;10070:139;9854:362;9806:410;;;;:::o;10222:180::-;10270:77;10267:1;10260:88;10367:4;10364:1;10357:15;10391:4;10388:1;10381:15;10408:185;10448:1;10465:20;10483:1;10465:20;:::i;:::-;10460:25;;10499:20;10517:1;10499:20;:::i;:::-;10494:25;;10538:1;10528:35;;10543:18;;:::i;:::-;10528:35;10585:1;10582;10578:9;10573:14;;10408:185;;;;:::o;10599:170::-;10739:22;10735:1;10727:6;10723:14;10716:46;10599:170;:::o;10775:366::-;10917:3;10938:67;11002:2;10997:3;10938:67;:::i;:::-;10931:74;;11014:93;11103:3;11014:93;:::i;:::-;11132:2;11127:3;11123:12;11116:19;;10775:366;;;:::o;11147:419::-;11313:4;11351:2;11340:9;11336:18;11328:26;;11400:9;11394:4;11390:20;11386:1;11375:9;11371:17;11364:47;11428:131;11554:4;11428:131;:::i;:::-;11420:139;;11147:419;;;:::o;11572:191::-;11612:3;11631:20;11649:1;11631:20;:::i;:::-;11626:25;;11665:20;11683:1;11665:20;:::i;:::-;11660:25;;11708:1;11705;11701:9;11694:16;;11729:3;11726:1;11723:10;11720:36;;;11736:18;;:::i;:::-;11720:36;11572:191;;;;:::o;11769:118::-;11856:24;11874:5;11856:24;:::i;:::-;11851:3;11844:37;11769:118;;:::o;11893:442::-;12042:4;12080:2;12069:9;12065:18;12057:26;;12093:71;12161:1;12150:9;12146:17;12137:6;12093:71;:::i;:::-;12174:72;12242:2;12231:9;12227:18;12218:6;12174:72;:::i;:::-;12256;12324:2;12313:9;12309:18;12300:6;12256:72;:::i;:::-;11893:442;;;;;;:::o;12341:222::-;12434:4;12472:2;12461:9;12457:18;12449:26;;12485:71;12553:1;12542:9;12538:17;12529:6;12485:71;:::i;:::-;12341:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1124800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"claim()": "infinite",
								"decimals()": "449",
								"name()": "infinite",
								"stake(uint256)": "infinite",
								"staked(address)": "2824",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22421,
									"end": 22520,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "4669786564205374616B696E6700000000000000000000000000000000000000"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "4649580000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12862,
									"end": 12867,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12854,
									"end": 12867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12887,
									"end": 12894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12884,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12877,
									"end": 12894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22475,
									"end": 22513,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22481,
									"end": 22491,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22493,
									"end": 22512,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 22475,
									"end": 22480,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22475,
									"end": 22480,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22475,
									"end": 22480,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22475,
									"end": 22513,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22475,
									"end": 22513,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22475,
									"end": 22513,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22475,
									"end": 22513,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22475,
									"end": 22513,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18702,
									"end": 18703,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18683,
									"end": 18690,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18756,
									"end": 18757,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18727,
									"end": 18759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18795,
									"end": 18796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18799,
									"end": 18806,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18808,
									"end": 18813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18786,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 18779,
									"end": 18786,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18779,
									"end": 18786,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17268,
									"end": 17269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17252,
									"end": 17256,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17404,
									"end": 17409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17400,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17388,
									"end": 17400,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 17388,
									"end": 17409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17462,
									"end": 17471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17472,
									"end": 17476,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17509,
									"end": 17514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17495,
									"end": 17506,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17495,
									"end": 17514,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17566,
									"end": 17570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17572,
									"end": 17583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17585,
									"end": 17590,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17541,
									"end": 17591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17758,
									"end": 17763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17744,
									"end": 17755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17744,
									"end": 17763,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17740,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17426,
									"end": 17788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17816,
									"end": 17817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17802,
									"end": 17804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17981,
									"end": 17986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17965,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18193,
									"end": 18198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18186,
									"end": 18188,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18253,
									"end": 18255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18251,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18257,
									"end": 18262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18238,
									"end": 18263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22134,
									"end": 24793,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8ccb8afe482a8e95309cb1b125d0d3e6d02e9a58a5e616b7a4a3677c5e132f064736f6c63430008180033",
									".code": [
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "98807D84"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "98807D84"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "2E17DE78"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 24793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12966,
											"end": 13055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12966,
											"end": 13055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14036,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14036,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23400,
											"end": 24023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23400,
											"end": 24023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13894,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13894,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24029,
											"end": 24791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13168,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13168,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 22172,
											"end": 22213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22172,
											"end": 22213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22172,
											"end": 22213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22526,
											"end": 23394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22526,
											"end": 23394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13043,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13036,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13036,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15258,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15274,
											"end": 15287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15290,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15290,
											"end": 15302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15312,
											"end": 15343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15321,
											"end": 15326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15337,
											"end": 15342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15312,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 15312,
											"end": 15343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15312,
											"end": 15343,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15312,
											"end": 15343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15360,
											"end": 15364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15353,
											"end": 15364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14114,
											"end": 14126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16052,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16052,
											"end": 16064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16034,
											"end": 16064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16034,
											"end": 16064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16090,
											"end": 16094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16096,
											"end": 16103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16074,
											"end": 16111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16111,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16074,
											"end": 16111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16121,
											"end": 16147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16131,
											"end": 16135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16139,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16121,
											"end": 16130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16121,
											"end": 16147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16121,
											"end": 16147,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16121,
											"end": 16147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16164,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16157,
											"end": 16168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23507,
											"end": 23508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23498,
											"end": 23504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23498,
											"end": 23508,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23490,
											"end": 23527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23490,
											"end": 23527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23631,
											"end": 23637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23615,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23616,
											"end": 23626,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23637,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23601,
											"end": 23660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23601,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23730,
											"end": 23737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23730,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 23730,
											"end": 23737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23730,
											"end": 23737,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23730,
											"end": 23737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23835,
											"end": 23841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23819,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23820,
											"end": 23830,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23813,
											"end": 23841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23813,
											"end": 23841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23930,
											"end": 23934,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23937,
											"end": 23947,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23949,
											"end": 23955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23912,
											"end": 23956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23956,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23912,
											"end": 23956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23400,
											"end": 24023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13943,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13960,
											"end": 13969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13960,
											"end": 13969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24029,
											"end": 24791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24130,
											"end": 24131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24115,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24116,
											"end": 24126,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24109,
											"end": 24131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24101,
											"end": 24150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 24101,
											"end": 24150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24213,
											"end": 24234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24255,
											"end": 24267,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24268,
											"end": 24278,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24255,
											"end": 24279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24252,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24237,
											"end": 24279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24237,
											"end": 24279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24279,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24237,
											"end": 24279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24213,
											"end": 24279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24213,
											"end": 24279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24358,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24413,
											"end": 24420,
											"name": "PUSH",
											"source": 0,
											"value": "1E14320"
										},
										{
											"begin": 24397,
											"end": 24410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24382,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24383,
											"end": 24393,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24376,
											"end": 24410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24376,
											"end": 24410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24410,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24376,
											"end": 24410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24376,
											"end": 24420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24376,
											"end": 24420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24376,
											"end": 24420,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24376,
											"end": 24420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24358,
											"end": 24420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24358,
											"end": 24420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24562,
											"end": 24572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24574,
											"end": 24581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24556,
											"end": 24582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24582,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24556,
											"end": 24582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24690,
											"end": 24705,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24675,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24676,
											"end": 24686,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24663,
											"end": 24687,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24705,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24053,
											"end": 24791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24053,
											"end": 24791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24029,
											"end": 24791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14256,
											"end": 14263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13215,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13247,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13240,
											"end": 13254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13240,
											"end": 13254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22630,
											"end": 22631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22621,
											"end": 22627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22621,
											"end": 22631,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22613,
											"end": 22650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22613,
											"end": 22650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22756,
											"end": 22762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22731,
											"end": 22752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22741,
											"end": 22751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22731,
											"end": 22740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22731,
											"end": 22752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22731,
											"end": 22752,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 22731,
											"end": 22752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22731,
											"end": 22762,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22731,
											"end": 22762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 22723,
											"end": 22787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22723,
											"end": 22787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22860,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22870,
											"end": 22880,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22890,
											"end": 22894,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 22903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22860,
											"end": 22869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22860,
											"end": 22904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22860,
											"end": 22904,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22860,
											"end": 22904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23024,
											"end": 23025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23003,
											"end": 23009,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23010,
											"end": 23020,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23025,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22999,
											"end": 23174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22999,
											"end": 23174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22999,
											"end": 23174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23041,
											"end": 23048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23041,
											"end": 23046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 23041,
											"end": 23048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23041,
											"end": 23048,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23041,
											"end": 23048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22999,
											"end": 23174,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22999,
											"end": 23174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23210,
											"end": 23225,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23195,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23196,
											"end": 23206,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23183,
											"end": 23207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23319,
											"end": 23325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23303,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23304,
											"end": 23314,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23297,
											"end": 23325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23297,
											"end": 23325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22526,
											"end": 23394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14603,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14603,
											"end": 14615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14587,
											"end": 14615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14587,
											"end": 14615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14625,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14635,
											"end": 14640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14642,
											"end": 14644,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14625,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14625,
											"end": 14652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14625,
											"end": 14652,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14625,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14662,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 14825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14856,
											"end": 14861,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14837,
											"end": 14871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14837,
											"end": 14871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7275,
											"end": 7371,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7275,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7364,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7275,
											"end": 7371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7275,
											"end": 7371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19965,
											"end": 20002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19974,
											"end": 19979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19981,
											"end": 19988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19990,
											"end": 19995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19965,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 19965,
											"end": 20002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19965,
											"end": 20002,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19965,
											"end": 20002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21691,
											"end": 21696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21698,
											"end": 21705,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21681,
											"end": 21706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21720,
											"end": 21736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21720,
											"end": 21757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21796,
											"end": 21801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21801,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21855,
											"end": 21862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21864,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 21828,
											"end": 21888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21944,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21953,
											"end": 21958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21960,
											"end": 21967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 21993,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 21985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 21993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21995,
											"end": 22000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21944,
											"end": 21952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 21944,
											"end": 22001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21944,
											"end": 22001,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21944,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21644,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16647,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16699,
											"end": 16700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16672,
											"end": 16702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16740,
											"end": 16741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16765,
											"end": 16797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16825,
											"end": 16829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16831,
											"end": 16833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16817,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16841,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16817,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18756,
											"end": 18757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18727,
											"end": 18759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18795,
											"end": 18796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18799,
											"end": 18806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18808,
											"end": 18813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18779,
											"end": 18814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18814,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18779,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 20971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20953,
											"end": 20958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21024,
											"end": 21025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20995,
											"end": 21027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21070,
											"end": 21071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 21095,
											"end": 21126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21176,
											"end": 21181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21158,
											"end": 21163,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21165,
											"end": 21172,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21241,
											"end": 21248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21250,
											"end": 21255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21225,
											"end": 21256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17388,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17388,
											"end": 17409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17509,
											"end": 17514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17566,
											"end": 17570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17572,
											"end": 17583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 17541,
											"end": 17591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17740,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17426,
											"end": 17788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17816,
											"end": 17817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17802,
											"end": 17804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17981,
											"end": 17986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17965,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18186,
											"end": 18188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18257,
											"end": 18262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 18238,
											"end": 18263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4529,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4534,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4537,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4933,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5108,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6128,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6177,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6475,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6679,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6515,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6671,
											"name": "PUSH",
											"source": 1,
											"value": "616D6F756E74206973203C3D2030000000000000000000000000000000000000"
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6632,
											"end": 6672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 7051,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6685,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6912,
											"end": 6914,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6907,
											"end": 6910,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6848,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6915,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6848,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6841,
											"end": 6915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6841,
											"end": 6915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6924,
											"end": 7017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7037,
											"end": 7040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7033,
											"end": 7045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 7051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 7051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 7051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 7051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7476,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7057,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7321,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7464,
											"end": 7468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7338,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7469,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7338,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7650,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7482,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "PUSH",
											"source": 1,
											"value": "616D6F756E74206973203E207374616B65640000000000000000000000000000"
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7606,
											"end": 7620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8022,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7656,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7883,
											"end": 7885,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7878,
											"end": 7881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7819,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7886,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7819,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7895,
											"end": 7988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7988,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7895,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 8022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8447,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 8028,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8209,
											"end": 8235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8209,
											"end": 8235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8435,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8309,
											"end": 8440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8440,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8309,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8028,
											"end": 8447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8633,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8453,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8498,
											"end": 8499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8491,
											"end": 8579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8588,
											"end": 8603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8626,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8619,
											"end": 8620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8833,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8639,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8679,
											"end": 8683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8717,
											"end": 8718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8699,
											"end": 8719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8694,
											"end": 8719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8694,
											"end": 8719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8751,
											"end": 8752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8733,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8753,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8733,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8803,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8806,
											"end": 8824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 9003,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8839,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 8995,
											"name": "PUSH",
											"source": 1,
											"value": "7374616B6564206973203C3D2030000000000000000000000000000000000000"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8963,
											"end": 8977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8956,
											"end": 8996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 9003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 9003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9375,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9009,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9236,
											"end": 9238,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 9231,
											"end": 9234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 9172,
											"end": 9239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9239,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9172,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9165,
											"end": 9239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9165,
											"end": 9239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9248,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9337,
											"end": 9340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9248,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9248,
											"end": 9341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9248,
											"end": 9341,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9248,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9366,
											"end": 9368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9361,
											"end": 9364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9357,
											"end": 9369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9350,
											"end": 9369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9350,
											"end": 9369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9800,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9381,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9547,
											"end": 9551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9574,
											"end": 9583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9562,
											"end": 9588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9562,
											"end": 9588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9624,
											"end": 9644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 9622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9788,
											"end": 9792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9662,
											"end": 9793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9793,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9662,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 10216,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 9806,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9869,
											"end": 9889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9903,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 9921,
											"end": 9922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9903,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9903,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9903,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 9903,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9898,
											"end": 9923,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9898,
											"end": 9923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9980,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 9998,
											"end": 10009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9980,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9980,
											"end": 10010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9980,
											"end": 10010,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 9980,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 10010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 10010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10143,
											"end": 10144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10162,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10176,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10070,
											"end": 10209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 10189,
											"end": 10207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10209,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10070,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9854,
											"end": 10216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 10216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 10216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 10216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 10216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 10216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10222,
											"end": 10402,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10222,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10347,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10267,
											"end": 10268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10371,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10364,
											"end": 10365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10357,
											"end": 10372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10395,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10388,
											"end": 10389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10396,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10593,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10408,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10483,
											"end": 10484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10465,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10465,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10465,
											"end": 10485,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10465,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10517,
											"end": 10518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10499,
											"end": 10519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10499,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10494,
											"end": 10519,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10494,
											"end": 10519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10528,
											"end": 10563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10543,
											"end": 10561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10563,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10528,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10582,
											"end": 10583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10578,
											"end": 10587,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10599,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10761,
											"name": "PUSH",
											"source": 1,
											"value": "62616C616E6365206973203C3D20616D6F756E74000000000000000000000000"
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11141,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10775,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10997,
											"end": 11000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 10938,
											"end": 11005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 11005,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10938,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10931,
											"end": 11005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10931,
											"end": 11005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11103,
											"end": 11106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 11014,
											"end": 11107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11107,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11014,
											"end": 11107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11132,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11127,
											"end": 11130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11123,
											"end": 11135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 11141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11566,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 11147,
											"end": 11566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11313,
											"end": 11317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11351,
											"end": 11353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11390,
											"end": 11410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11386,
											"end": 11387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11554,
											"end": 11558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 11428,
											"end": 11559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11559,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11428,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11572,
											"end": 11763,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 11572,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 11649,
											"end": 11650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11631,
											"end": 11651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11665,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11665,
											"end": 11685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11665,
											"end": 11685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11665,
											"end": 11685,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 11665,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11660,
											"end": 11685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11660,
											"end": 11685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11701,
											"end": 11710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11723,
											"end": 11733,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 11720,
											"end": 11756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 11736,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 11736,
											"end": 11754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11754,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 11736,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11756,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 11720,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11572,
											"end": 11763,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11572,
											"end": 11763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11572,
											"end": 11763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11572,
											"end": 11763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11572,
											"end": 11763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11887,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11769,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11874,
											"end": 11879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11856,
											"end": 11880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11880,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11856,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11844,
											"end": 11881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12042,
											"end": 12046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12082,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12069,
											"end": 12078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 12161,
											"end": 12162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12146,
											"end": 12163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 12093,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12164,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 12093,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 12242,
											"end": 12244,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12231,
											"end": 12240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12227,
											"end": 12245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12224,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12174,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 12174,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 12324,
											"end": 12326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12313,
											"end": 12322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12300,
											"end": 12306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12256,
											"end": 12328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12328,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 12256,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 12335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12563,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 12341,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12472,
											"end": 12474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12449,
											"end": 12475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12449,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12553,
											"end": 12554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12542,
											"end": 12551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12538,
											"end": 12555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 12485,
											"end": 12556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12556,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12485,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12563,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"stake(uint256)": "a694fc3a",
							"staked(address)": "98807d84",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"FixedStaking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 778,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "staked",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 782,
								"contract": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol:FixedStaking",
								"label": "stakedFromTS",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol\":{\"keccak256\":\"0x2e226747cb255bd239b64444a7aa0eb63f153c441ed9c91d79ca1e70e0a29908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75a5138bc0f5c847c10bc52410f99802a2ad59f640477e02c8ee9fef869f2222\",\"dweb:/ipfs/QmP1ip3TjxTUA65PiPXgRTXA1veT4k7QaEwS1M1MG5ddJR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/fixed-rate-staking-contract/FixedRateStaking_flattened.sol",
					"exportedSymbols": {
						"Context": [
							165
						],
						"ERC20": [
							771
						],
						"FixedStaking": [
							948
						],
						"IERC1155Errors": [
							136
						],
						"IERC20": [
							242
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							265
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 949,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "177:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "203:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "353:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "372:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "692:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "725:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "758:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "750:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:49:0"
									},
									"src": "686:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "772:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "935:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:16:0"
									},
									"src": "929:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "976:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1146:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1175:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1167:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:18:0"
									},
									"src": "1140:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1191:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1547:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1599:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1591:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:52:0"
									},
									"src": "1541:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1632:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1817:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1846:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1838:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:18:0"
									},
									"src": "1811:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1862:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2068:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:17:0"
									},
									"src": "2062:43:0"
								}
							],
							"scope": 949,
							"src": "343:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2109:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2261:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2281:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2511:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2530:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:15:0"
									},
									"src": "2505:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2551:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2694:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2725:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:17:0"
									},
									"src": "2688:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2740:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3040:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3061:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:48:0"
									},
									"src": "3034:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3115:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3278:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3297:16:0"
									},
									"src": "3272:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3320:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3490:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3520:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3512:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3511:18:0"
									},
									"src": "3484:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3536:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3794:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3829:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3821:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3847:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:35:0"
									},
									"src": "3788:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3862:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4047:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4077:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4069:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4068:18:0"
									},
									"src": "4041:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4093:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4301:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4331:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4323:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4322:18:0"
									},
									"src": "4295:46:0"
								}
							],
							"scope": 949,
							"src": "2251:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4345:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4499:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4520:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4892:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4927:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4960:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4976:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4968:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:66:0"
									},
									"src": "4886:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4991:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5154:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5174:16:0"
									},
									"src": "5148:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5197:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5367:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5398:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5390:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:18:0"
									},
									"src": "5361:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5414:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5681:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5718:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5710:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5728:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:33:0"
									},
									"src": "5675:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5749:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5934:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5965:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5957:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:18:0"
									},
									"src": "5928:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5981:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6189:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6220:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6212:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6211:18:0"
									},
									"src": "6183:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6236:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6527:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6561:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6553:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6580:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6572:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6552:41:0"
									},
									"src": "6521:73:0"
								}
							],
							"scope": 949,
							"src": "4489:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6720:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6746:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "Context",
							"nameLocation": "7261:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7337:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 143,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7354:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7358:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7354:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 142,
												"id": 145,
												"nodeType": "Return",
												"src": "7347:17:0"
											}
										]
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7284:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7294:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7327:9:0"
									},
									"scope": 165,
									"src": "7275:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "7444:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7461:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7465:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7461:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "7454:15:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7386:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7394:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "7428:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7427:16:0"
									},
									"scope": 165,
									"src": "7377:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "7554:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7571:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "7564:8:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "7491:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7511:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "7545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:9:0"
									},
									"scope": 165,
									"src": "7482:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 949,
							"src": "7243:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7715:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "7741:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "IERC20",
							"nameLocation": "7822:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "7835:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 176,
									"name": "Transfer",
									"nameLocation": "8004:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8029:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8013:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8051:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8035:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8063:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8055:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8012:57:0"
									},
									"src": "7998:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "8076:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 185,
									"name": "Approval",
									"nameLocation": "8235:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8260:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8244:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8267:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8243:63:0"
									},
									"src": "8229:78:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "8313:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8392:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8403:2:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "8429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:9:0"
									},
									"scope": 242,
									"src": "8383:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "8444:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8529:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8538:17:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:9:0"
									},
									"scope": 242,
									"src": "8520:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "8594:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8821:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8838:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8830:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8850:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8829:27:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8875:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8874:6:0"
									},
									"scope": 242,
									"src": "8812:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "8887:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9165:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9190:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9174:32:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9229:9:0"
									},
									"scope": 242,
									"src": "9156:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9245:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9926:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9942:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9934:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9959:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9933:32:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9984:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9983:6:0"
									},
									"scope": 242,
									"src": "9917:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "9996:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10307:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10328:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10320:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10342:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10334:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10354:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10346:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10319:41:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10379:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10378:6:0"
									},
									"scope": 242,
									"src": "10298:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 949,
							"src": "7812:2575:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10559:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 245,
										"name": "IERC20",
										"nameLocations": [
											"10701:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "10701:6:0"
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "10701:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "10586:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265,
								242
							],
							"name": "IERC20Metadata",
							"nameLocation": "10683:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "10714:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10782:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10786:2:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10812:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10811:15:0"
									},
									"scope": 265,
									"src": "10773:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10833:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10903:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10909:2:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "10935:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10935:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10934:15:0"
									},
									"scope": 265,
									"src": "10894:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "10956:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "11035:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11043:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11069:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 261,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11069:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11068:7:0"
									},
									"scope": 265,
									"src": "11026:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 949,
							"src": "10673:405:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11210:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12320:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 165,
										"src": "12320:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12320:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12329:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "12329:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12329:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12337:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "12337:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12337:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12353:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "12353:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12353:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11240:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								41,
								265,
								242,
								165
							],
							"name": "ERC20",
							"nameLocation": "12311:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12416:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12372:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12388:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12380:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12372:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12399:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12504:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12432:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12448:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12440:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12432:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12475:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12467:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12459:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12486:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12538:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12522:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12522:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12572:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12557:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12557:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12598:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12583:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12583:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12844:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12854:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12862:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12854:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12854:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12877:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12877:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12612:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12814:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12800:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12800:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12821:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12821:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12799:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12844:0:0"
									},
									"scope": 771,
									"src": "12788:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										252
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "13026:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13043:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13036:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12907:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12975:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12979:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "13011:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13010:15:0"
									},
									"scope": 771,
									"src": "12966:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										258
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13230:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13240:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13061:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13177:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13183:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13215:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13215:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13214:15:0"
									},
									"scope": 771,
									"src": "13168:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										264
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13950:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13967:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13960:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13267:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13903:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13911:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13943:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13943:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13942:7:0"
									},
									"scope": 771,
									"src": "13894:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14097:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14114:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14107:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13982:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14045:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14056:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14087:9:0"
									},
									"scope": 771,
									"src": "14036:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										199
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14265:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14282:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14282:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14275:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14139:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14200:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14218:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14210:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14209:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14255:9:0"
									},
									"scope": 771,
									"src": "14191:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										209
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14577:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14595:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14587:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14587:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "14603:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14603:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14587:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14635:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14642:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14646:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14625:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14625:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14625:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14662:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14313:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14511:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14528:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14520:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14540:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14519:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14571:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14570:6:0"
									},
									"scope": 771,
									"src": "14502:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										219
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14827:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14844:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14856:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14844:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14844:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14837:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14686:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14747:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14765:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14757:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14756:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14817:9:0"
									},
									"scope": 771,
									"src": "14738:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										229
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15264:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15282:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15274:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15274:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "15290:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15290:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15274:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15337:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15312:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15312:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15353:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14884:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15194:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15210:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15201:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15258:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15258:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15257:6:0"
									},
									"scope": 771,
									"src": "15185:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "16024:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16042:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16034:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16034:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "16052:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16052:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16034:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16090:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16105:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16074:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16074:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16074:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16131:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16137:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16121:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16121:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16121:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16157:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15377:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15940:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15961:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15953:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15975:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15967:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15952:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16018:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16017:6:0"
									},
									"scope": 771,
									"src": "15931:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16617:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16631:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16627:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16651:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16691:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16691:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16691:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "16672:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16672:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16665:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16726:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16740:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16732:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16732:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16726:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16722:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16744:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16794:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16786:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16786:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16786:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "16765:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16765:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16758:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16831:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16817:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16817:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16181:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16567:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16589:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16581:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16601:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16566:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:0"
									},
									"scope": 771,
									"src": "16548:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17238:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17252:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17268:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17260:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17260:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17260:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17252:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17426:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17448:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17440:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17440:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17462:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17472:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17462:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17440:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17495:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17509:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17495:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17491:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17516:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17566:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17572:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17585:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "17541:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17541:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17534:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17619:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17726:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17736:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17726:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17744:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17758:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17744:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17726:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17726:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17248:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17272:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17388:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17404:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17388:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17388:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17802:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17816:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17808:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17808:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17802:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "18017:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18031:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18176:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18186:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18176:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18193:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18176:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18176:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17798:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17820:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17834:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17965:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17981:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17965:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17965:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18253:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "18238:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18238:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18233:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16854:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17172:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17180:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17202:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17179:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17238:0:0"
									},
									"scope": 771,
									"src": "17163:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18669:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18694:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18694:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18683:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18679:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18706:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18756:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18748:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18748:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18748:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "18727:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18727:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18720:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18795:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18787:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18787:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18808:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18779:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18779:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18276:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18622:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18636:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18627:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18669:0:0"
									},
									"scope": 771,
									"src": "18613:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19195:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19220:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19220:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19209:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19205:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19232:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19280:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19272:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19272:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19272:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "19253:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19253:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19246:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19320:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19320:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19303:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19303:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18827:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19148:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19162:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19179:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19171:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19153:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19195:0:0"
									},
									"scope": 771,
									"src": "19139:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19955:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19974:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19965:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19965:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19965:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19351:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19890:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19922:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19914:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19939:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19931:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19898:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19955:0:0"
									},
									"scope": 771,
									"src": "19881:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20939:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20953:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20970:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20962:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20962:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20953:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20949:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20974:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21024:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21016:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21016:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21016:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "20995:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20995:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20988:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21070:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21062:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21062:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21051:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21047:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21074:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21123:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21115:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21115:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21115:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "21095:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21095:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21088:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21146:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21158:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21146:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21146:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21176:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21146:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21146:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21195:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21191:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21206:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21234:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21241:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21250:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "21225:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21225:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21220:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "20015:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20850:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20867:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20882:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20874:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20911:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20906:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20906:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20858:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20939:0:0"
									},
									"scope": 771,
									"src": "20841:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21644:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21662:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21654:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21698:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21681:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21681:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21654:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21720:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21745:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21740:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21740:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21754:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21740:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21720:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21716:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21759:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21777:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21777:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21773:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21803:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21855:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21864:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21882:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "21828:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21828:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21821:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21916:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21953:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21960:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21969:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21988:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21969:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21995:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21944:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21944:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21944:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21279:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21564:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21588:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21580:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21620:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21612:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21579:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21644:0:0"
									},
									"scope": 771,
									"src": "21555:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 949,
							"src": "12293:9741:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "22107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "ERC20",
										"nameLocations": [
											"22159:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22159:5:0"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "22159:5:0"
								}
							],
							"canonicalName": "FixedStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 948,
							"linearizedBaseContracts": [
								948,
								771,
								41,
								265,
								242,
								165
							],
							"name": "FixedStaking",
							"nameLocation": "22143:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "98807d84",
									"id": 778,
									"mutability": "mutable",
									"name": "staked",
									"nameLocation": "22207:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 948,
									"src": "22172:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 777,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 775,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22180:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22172:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 776,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22191:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 782,
									"mutability": "mutable",
									"name": "stakedFromTS",
									"nameLocation": "22323:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 948,
									"src": "22287:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 781,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 779,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22295:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22287:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 780,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22306:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "22465:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 790,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22481:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22485:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22481:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030303030303030303030303030303030",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22493:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1000000000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"id": 789,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "22475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22475:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "22475:38:0"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4669786564205374616b696e67",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22441:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0a5fc80d246c14dad431261925a32997254b94b0e94957dcfa9679b4672a7928",
														"typeString": "literal_string \"Fixed Staking\""
													},
													"value": "Fixed Staking"
												},
												{
													"hexValue": "464958",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22458:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_038087215e7794553637973f572ebea2b4a0d8c97a62017b2deb2cc888d57b00",
														"typeString": "literal_string \"FIX\""
													},
													"value": "FIX"
												}
											],
											"id": 787,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 784,
												"name": "ERC20",
												"nameLocations": [
													"22435:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "22435:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22435:29:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22432:2:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22465:0:0"
									},
									"scope": 948,
									"src": "22421:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "22566:828:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 802,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "22621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22630:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22621:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206973203c3d2030",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22633:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4",
																"typeString": "literal_string \"amount is <= 0\""
															},
															"value": "amount is <= 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4",
																"typeString": "literal_string \"amount is <= 0\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22613:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "22613:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 810,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "22741:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22745:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "22741:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 809,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "22731:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22731:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 813,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "22756:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22731:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62616c616e6365206973203c3d20616d6f756e74",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22764:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8",
																"typeString": "literal_string \"balance is <= amount\""
															},
															"value": "balance is <= amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a270ae317e94a92cd06976834fae597fab1d887a32a006143d16dbfdf7e508e8",
																"typeString": "literal_string \"balance is <= amount\""
															}
														],
														"id": 808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22723:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "22723:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 819,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22870:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22874:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22870:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 823,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22890:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FixedStaking_$948",
																		"typeString": "contract FixedStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FixedStaking_$948",
																		"typeString": "contract FixedStaking"
																	}
																],
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 821,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22882:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22882:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "22897:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "22860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22860:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "22860:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 828,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "23003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 831,
														"indexExpression": {
															"expression": {
																"id": 829,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23010:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23014:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23010:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "23003:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23024:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23003:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "22999:175:0",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "23027:147:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 834,
																	"name": "claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "23041:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23041:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "23041:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 839,
															"name": "stakedFromTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "23183:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 842,
														"indexExpression": {
															"expression": {
																"id": 840,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23196:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23200:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23196:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23183:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 843,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "23210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23216:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "23210:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23183:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "23183:42:0"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 847,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "23297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 850,
														"indexExpression": {
															"expression": {
																"id": 848,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23304:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23308:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23304:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23297:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 851,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "23319:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23297:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "23297:28:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "22535:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22549:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "22541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22540:16:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22566:0:0"
									},
									"scope": 948,
									"src": "22526:868:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "23442:581:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 861,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "23498:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23507:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23498:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206973203c3d2030",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23510:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4",
																"typeString": "literal_string \"amount is <= 0\""
															},
															"value": "amount is <= 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42e6c3255f88d7581835907cd6076cc1554d3262976dedfb22019e4b7dd3b4c4",
																"typeString": "literal_string \"amount is <= 0\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23490:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "23490:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 868,
																	"name": "staked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "23609:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 871,
																"indexExpression": {
																	"expression": {
																		"id": 869,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "23616:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23620:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23616:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23609:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 872,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "23631:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23609:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206973203e207374616b6564",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23639:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8",
																"typeString": "literal_string \"amount is > staked\""
															},
															"value": "amount is > staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ceadaa477ccd40d04ae361e9409fad8a7fb4fc264c64840321c88b677b942e8",
																"typeString": "literal_string \"amount is > staked\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23601:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "23601:59:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 877,
														"name": "claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "23730:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23730:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "23730:7:0"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 880,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "23813:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 883,
														"indexExpression": {
															"expression": {
																"id": 881,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23820:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23824:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23820:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 884,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "23835:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23813:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "23813:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "23930:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FixedStaking_$948",
																		"typeString": "contract FixedStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FixedStaking_$948",
																		"typeString": "contract FixedStaking"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23922:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23922:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 892,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23937:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23941:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23937:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "23949:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "23912:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23912:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "23912:44:0"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "23409:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "23417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23416:16:0"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23442:0:0"
									},
									"scope": 948,
									"src": "23400:623:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "24053:738:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 902,
																	"name": "staked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "24109:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"expression": {
																		"id": 903,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "24116:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24120:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "24116:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24109:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24130:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24109:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b6564206973203c3d2030",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24133:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7",
																"typeString": "literal_string \"staked is <= 0\""
															},
															"value": "staked is <= 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdbb98399cab7a00ad693bf51ebb1af98108f09c5d30faccad771adb61d18fa7",
																"typeString": "literal_string \"staked is <= 0\""
															}
														],
														"id": 901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24101:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "24101:49:0"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "secondsStaked",
														"nameLocation": "24221:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "24213:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 913,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "24237:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24243:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "24237:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 915,
															"name": "stakedFromTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "24255:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 918,
														"indexExpression": {
															"expression": {
																"id": 916,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24272:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "24255:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24237:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24213:66:0"
											},
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "24366:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "24358:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 921,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 923,
																"name": "staked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "24376:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 926,
															"indexExpression": {
																"expression": {
																	"id": 924,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "24383:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24387:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "24383:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24376:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 927,
															"name": "secondsStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "24397:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24376:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "332e3135346537",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31540000_by_1",
															"typeString": "int_const 31540000"
														},
														"value": "3.154e7"
													},
													"src": "24376:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24358:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 933,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24562:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24566:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "24574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "24556:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24556:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "24556:26:0"
											},
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 938,
															"name": "stakedFromTS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "24663:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 941,
														"indexExpression": {
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24676:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24680:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24676:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24663:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 942,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "24690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24696:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "24690:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24663:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "24663:42:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "24038:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24043:2:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24053:0:0"
									},
									"scope": 948,
									"src": "24029:762:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 949,
							"src": "22134:2659:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								176,
								185
							]
						}
					],
					"src": "177:24617:0"
				},
				"id": 0
			}
		}
	}
}